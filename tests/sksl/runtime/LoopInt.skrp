    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x0000000A (1.401298e-44)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. cast_to_int_from_float         $0 = FloatToInt($0)
   11. copy_constant                  $1 = 0x00000005 (7.006492e-45)
   12. mul_int                        $0 *= $1
   13. copy_slot_unmasked             five = $0
   14. store_condition_mask           $20 = CondMask
   15. store_condition_mask           $40 = CondMask
   16. store_condition_mask           $50 = CondMask
   17. store_condition_mask           $30 = CondMask
   18. store_condition_mask           $72 = CondMask
   19. store_condition_mask           $60 = CondMask
   20. store_condition_mask           $14 = CondMask
   21. store_condition_mask           $66 = CondMask
   22. branch_if_no_lanes_active      branch_if_no_lanes_active +33 (label 9 at #55)
   23. store_return_mask              $67 = RetMask
   24. copy_slot_unmasked             five₁ = five
   25. copy_slot_unmasked             i = kZero
   26. store_loop_mask                $68 = LoopMask
   27. jump                           jump +16 (label 11 at #43)
   28. label                          label 0x0000000C
   29. store_condition_mask           $69 = CondMask
   30. copy_slot_unmasked             $70 = i
   31. copy_slot_unmasked             $71 = five₁
   32. cmpeq_int                      $70 = equal($70, $71)
   33. merge_condition_mask           CondMask = $69 & $70
   34. copy_slot_unmasked             $71 = i
   35. copy_slot_masked               [return_loop].result = Mask($71)
   36. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   37. load_condition_mask            CondMask = $69
   38. label                          label 0x0000000A
   39. copy_slot_unmasked             $69 = i
   40. copy_constant                  $70 = 0x00000001 (1.401298e-45)
   41. add_int                        $69 += $70
   42. copy_slot_masked               i = Mask($69)
   43. label                          label 0x0000000B
   44. copy_slot_unmasked             $69 = i
   45. copy_constant                  $70 = 0x0000000A (1.401298e-44)
   46. cmplt_int                      $69 = lessThan($69, $70)
   47. merge_loop_mask                LoopMask &= $69
   48. stack_rewind
   49. branch_if_any_lanes_active     branch_if_any_lanes_active -21 (label 12 at #28)
   50. load_loop_mask                 LoopMask = $68
   51. zero_slot_unmasked             $68 = 0
   52. copy_slot_masked               [return_loop].result = Mask($68)
   53. load_return_mask               RetMask = $67
   54. copy_slot_unmasked             $67 = [return_loop].result
   55. label                          label 0x00000009
   56. copy_constant                  $68 = 0x00000005 (7.006492e-45)
   57. cmpeq_int                      $67 = equal($67, $68)
   58. zero_slot_unmasked             $15 = 0
   59. merge_condition_mask           CondMask = $66 & $67
   60. branch_if_no_lanes_active      branch_if_no_lanes_active +38 (label 8 at #98)
   61. copy_slot_unmasked             five₂ = five
   62. zero_2_slots_unmasked          sum, i₁ = 0
   63. store_loop_mask                $16 = LoopMask
   64. jump                           jump +21 (label 15 at #85)
   65. label                          label 0x00000010
   66. zero_slot_unmasked             $12 = 0
   67. store_condition_mask           $17 = CondMask
   68. copy_slot_unmasked             $18 = i₁
   69. copy_slot_unmasked             $19 = five₂
   70. cmplt_int                      $18 = lessThan($18, $19)
   71. merge_condition_mask           CondMask = $17 & $18
   72. copy_constant                  $13 = 0xFFFFFFFF
   73. copy_slot_masked               $12 = Mask($13)
   74. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   75. load_condition_mask            CondMask = $17
   76. copy_2_slots_unmasked          $17..18 = sum, i₁
   77. add_int                        $17 += $18
   78. copy_slot_masked               sum = Mask($17)
   79. reenable_loop_mask             LoopMask |= $12
   80. label                          label 0x0000000E
   81. copy_slot_unmasked             $17 = i₁
   82. copy_constant                  $18 = 0x00000001 (1.401298e-45)
   83. add_int                        $17 += $18
   84. copy_slot_masked               i₁ = Mask($17)
   85. label                          label 0x0000000F
   86. copy_slot_unmasked             $17 = i₁
   87. copy_slot_unmasked             $18 = kTen
   88. cmplt_int                      $17 = lessThan($17, $18)
   89. merge_loop_mask                LoopMask &= $17
   90. stack_rewind
   91. branch_if_any_lanes_active     branch_if_any_lanes_active -26 (label 16 at #65)
   92. load_loop_mask                 LoopMask = $16
   93. copy_slot_unmasked             $16 = sum
   94. label                          label 0x0000000D
   95. copy_constant                  $17 = 0x00000023 (4.904545e-44)
   96. cmpeq_int                      $16 = equal($16, $17)
   97. copy_slot_masked               $15 = Mask($16)
   98. label                          label 0x00000008
   99. load_condition_mask            CondMask = $66
  100. zero_slot_unmasked             $61 = 0
  101. merge_condition_mask           CondMask = $14 & $15
  102. branch_if_no_lanes_active      branch_if_no_lanes_active +37 (label 7 at #139)
  103. copy_constant                  five₃ = 0x00000005 (7.006492e-45)
  104. zero_slot_unmasked             sum₁ = 0
  105. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  106. zero_slot_unmasked             i₂ = 0
  107. store_loop_mask                $62 = LoopMask
  108. jump                           jump +18 (label 19 at #126)
  109. label                          label 0x00000014
  110. store_condition_mask           $63 = CondMask
  111. copy_slot_unmasked             $64 = five₃
  112. copy_slot_unmasked             $65 = i₂
  113. cmplt_int                      $64 = lessThan($64, $65)
  114. merge_condition_mask           CondMask = $63 & $64
  115. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  116. load_condition_mask            CondMask = $63
  117. copy_slot_unmasked             $63 = sum₁
  118. copy_slot_unmasked             $64 = i₂
  119. add_int                        $63 += $64
  120. copy_slot_masked               sum₁ = Mask($63)
  121. label                          label 0x00000012
  122. copy_slot_unmasked             $63 = i₂
  123. copy_slot_unmasked             $64 = kOne
  124. add_int                        $63 += $64
  125. copy_slot_masked               i₂ = Mask($63)
  126. label                          label 0x00000013
  127. copy_slot_unmasked             $63 = i₂
  128. copy_constant                  $64 = 0x0000000A (1.401298e-44)
  129. cmplt_int                      $63 = lessThan($63, $64)
  130. merge_loop_mask                LoopMask &= $63
  131. stack_rewind
  132. branch_if_any_lanes_active     branch_if_any_lanes_active -23 (label 20 at #109)
  133. load_loop_mask                 LoopMask = $62
  134. copy_slot_unmasked             $62 = sum₁
  135. label                          label 0x00000011
  136. copy_constant                  $63 = 0x0000000F (2.101948e-44)
  137. cmpeq_int                      $62 = equal($62, $63)
  138. copy_slot_masked               $61 = Mask($62)
  139. label                          label 0x00000007
  140. load_condition_mask            CondMask = $14
  141. zero_slot_unmasked             $73 = 0
  142. merge_condition_mask           CondMask = $60 & $61
  143. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 6 at #171)
  144. copy_constant                  $74 = 0x00000009 (1.261169e-44)
  145. swizzle_4                      $74..77 = ($74..77).xxxx
  146. copy_4_slots_unmasked          result = $74..77
  147. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 22 at #160)
  148. copy_constant                  i₃ = 0x00000001 (1.401298e-45)
  149. label                          label 0x00000017
  150. copy_4_slots_unmasked          $74..77 = result(1..3), i₃
  151. copy_4_slots_masked            result = Mask($74..77)
  152. copy_slot_unmasked             $74 = i₃
  153. copy_constant                  $75 = 0x00000001 (1.401298e-45)
  154. add_int                        $74 += $75
  155. copy_slot_masked               i₃ = Mask($74)
  156. copy_constant                  $75 = 0x00000003 (4.203895e-45)
  157. cmple_int                      $74 = lessThanEqual($74, $75)
  158. stack_rewind
  159. branch_if_no_active_lanes_eq   branch -10 (label 23 at #149) if no lanes of $74 == 0x00000000 (0.0)
  160. label                          label 0x00000016
  161. copy_4_slots_unmasked          $74..77 = result
  162. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  163. copy_constant                  $79 = 0x00000001 (1.401298e-45)
  164. copy_constant                  $80 = 0x00000002 (2.802597e-45)
  165. copy_constant                  $81 = 0x00000003 (4.203895e-45)
  166. cmpeq_4_ints                   $74..77 = equal($74..77, $78..81)
  167. bitwise_and_2_ints             $74..75 &= $76..77
  168. bitwise_and_int                $74 &= $75
  169. label                          label 0x00000015
  170. copy_slot_masked               $73 = Mask($74)
  171. label                          label 0x00000006
  172. load_condition_mask            CondMask = $60
  173. zero_slot_unmasked             $31 = 0
  174. merge_condition_mask           CondMask = $72 & $73
  175. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 5 at #203)
  176. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  177. swizzle_4                      $32..35 = ($32..35).xxxx
  178. copy_4_slots_unmasked          result₁ = $32..35
  179. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 25 at #192)
  180. copy_constant                  i₄ = 0x00000001 (1.401298e-45)
  181. label                          label 0x0000001A
  182. copy_4_slots_unmasked          $32..35 = result₁(1..3), i₄
  183. copy_4_slots_masked            result₁ = Mask($32..35)
  184. copy_slot_unmasked             $32 = i₄
  185. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  186. add_int                        $32 += $33
  187. copy_slot_masked               i₄ = Mask($32)
  188. copy_constant                  $33 = 0x00000004 (5.605194e-45)
  189. cmplt_int                      $32 = lessThan($32, $33)
  190. stack_rewind
  191. branch_if_no_active_lanes_eq   branch -10 (label 26 at #181) if no lanes of $32 == 0x00000000 (0.0)
  192. label                          label 0x00000019
  193. copy_4_slots_unmasked          $32..35 = result₁
  194. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  195. copy_constant                  $37 = 0x00000001 (1.401298e-45)
  196. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  197. copy_constant                  $39 = 0x00000003 (4.203895e-45)
  198. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  199. bitwise_and_2_ints             $32..33 &= $34..35
  200. bitwise_and_int                $32 &= $33
  201. label                          label 0x00000018
  202. copy_slot_masked               $31 = Mask($32)
  203. label                          label 0x00000005
  204. load_condition_mask            CondMask = $72
  205. zero_slot_unmasked             $51 = 0
  206. merge_condition_mask           CondMask = $30 & $31
  207. branch_if_no_lanes_active      branch_if_no_lanes_active +29 (label 4 at #236)
  208. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  209. swizzle_4                      $52..55 = ($52..55).xxxx
  210. copy_4_slots_unmasked          result₂ = $52..55
  211. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 28 at #225)
  212. copy_constant                  i₅ = 0x00000003 (4.203895e-45)
  213. label                          label 0x0000001D
  214. copy_4_slots_unmasked          $52..55 = result₂(1..3), i₅
  215. copy_4_slots_masked            result₂ = Mask($52..55)
  216. copy_slot_unmasked             $52 = i₅
  217. copy_constant                  $53 = 0x00000001 (1.401298e-45)
  218. sub_int                        $52 -= $53
  219. copy_slot_masked               i₅ = Mask($52)
  220. copy_constant                  $52 = 0x00000001 (1.401298e-45)
  221. copy_slot_unmasked             $53 = i₅
  222. cmple_int                      $52 = lessThanEqual($52, $53)
  223. stack_rewind
  224. branch_if_no_active_lanes_eq   branch -11 (label 29 at #213) if no lanes of $52 == 0x00000000 (0.0)
  225. label                          label 0x0000001C
  226. copy_4_slots_unmasked          $52..55 = result₂
  227. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  228. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  229. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  230. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  231. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  232. bitwise_and_2_ints             $52..53 &= $54..55
  233. bitwise_and_int                $52 &= $53
  234. label                          label 0x0000001B
  235. copy_slot_masked               $51 = Mask($52)
  236. label                          label 0x00000004
  237. load_condition_mask            CondMask = $30
  238. zero_slot_unmasked             $41 = 0
  239. merge_condition_mask           CondMask = $50 & $51
  240. branch_if_no_lanes_active      branch_if_no_lanes_active +29 (label 3 at #269)
  241. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  242. swizzle_4                      $42..45 = ($42..45).xxxx
  243. copy_4_slots_unmasked          result₃ = $42..45
  244. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 31 at #258)
  245. copy_constant                  i₆ = 0x00000003 (4.203895e-45)
  246. label                          label 0x00000020
  247. copy_4_slots_unmasked          $42..45 = result₃(1..3), i₆
  248. copy_4_slots_masked            result₃ = Mask($42..45)
  249. copy_slot_unmasked             $42 = i₆
  250. copy_constant                  $43 = 0x00000001 (1.401298e-45)
  251. sub_int                        $42 -= $43
  252. copy_slot_masked               i₆ = Mask($42)
  253. zero_slot_unmasked             $42 = 0
  254. copy_slot_unmasked             $43 = i₆
  255. cmplt_int                      $42 = lessThan($42, $43)
  256. stack_rewind
  257. branch_if_no_active_lanes_eq   branch -11 (label 32 at #246) if no lanes of $42 == 0x00000000 (0.0)
  258. label                          label 0x0000001F
  259. copy_4_slots_unmasked          $42..45 = result₃
  260. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  261. copy_constant                  $47 = 0x00000003 (4.203895e-45)
  262. copy_constant                  $48 = 0x00000002 (2.802597e-45)
  263. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  264. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  265. bitwise_and_2_ints             $42..43 &= $44..45
  266. bitwise_and_int                $42 &= $43
  267. label                          label 0x0000001E
  268. copy_slot_masked               $41 = Mask($42)
  269. label                          label 0x00000003
  270. load_condition_mask            CondMask = $50
  271. zero_slot_unmasked             $21 = 0
  272. merge_condition_mask           CondMask = $40 & $41
  273. branch_if_no_lanes_active      branch_if_no_lanes_active +20 (label 2 at #293)
  274. copy_constant                  $22 = 0x00000009 (1.261169e-44)
  275. swizzle_4                      $22..25 = ($22..25).xxxx
  276. copy_4_slots_unmasked          result₄ = $22..25
  277. branch_if_no_lanes_active      branch_if_no_lanes_active +5 (label 34 at #282)
  278. copy_constant                  i₇ = 0x00000001 (1.401298e-45)
  279. label                          label 0x00000023
  280. copy_4_slots_unmasked          $22..25 = result₄(1..3), i₇
  281. copy_4_slots_masked            result₄ = Mask($22..25)
  282. label                          label 0x00000022
  283. copy_4_slots_unmasked          $22..25 = result₄
  284. copy_constant                  $26 = 0x00000009 (1.261169e-44)
  285. copy_constant                  $27 = 0x00000009 (1.261169e-44)
  286. copy_constant                  $28 = 0x00000009 (1.261169e-44)
  287. copy_constant                  $29 = 0x00000001 (1.401298e-45)
  288. cmpeq_4_ints                   $22..25 = equal($22..25, $26..29)
  289. bitwise_and_2_ints             $22..23 &= $24..25
  290. bitwise_and_int                $22 &= $23
  291. label                          label 0x00000021
  292. copy_slot_masked               $21 = Mask($22)
  293. label                          label 0x00000002
  294. load_condition_mask            CondMask = $40
  295. zero_slot_unmasked             $0 = 0
  296. merge_condition_mask           CondMask = $20 & $21
  297. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 1 at #325)
  298. copy_constant                  $1 = 0x00000009 (1.261169e-44)
  299. swizzle_4                      $1..4 = ($1..4).xxxx
  300. copy_4_slots_unmasked          result₅ = $1..4
  301. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 37 at #314)
  302. copy_constant                  i₈ = 0x00000001 (1.401298e-45)
  303. label                          label 0x00000026
  304. copy_4_slots_unmasked          $1..4 = result₅(1..3), i₈
  305. copy_4_slots_masked            result₅ = Mask($1..4)
  306. copy_slot_unmasked             $1 = i₈
  307. copy_constant                  $2 = 0x00000001 (1.401298e-45)
  308. add_int                        $1 += $2
  309. copy_slot_masked               i₈ = Mask($1)
  310. copy_constant                  $2 = 0x00000004 (5.605194e-45)
  311. cmpne_int                      $1 = notEqual($1, $2)
  312. stack_rewind
  313. branch_if_no_active_lanes_eq   branch -10 (label 38 at #303) if no lanes of $1 == 0x00000000 (0.0)
  314. label                          label 0x00000025
  315. copy_4_slots_unmasked          $1..4 = result₅
  316. copy_constant                  $5 = 0x00000009 (1.261169e-44)
  317. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  318. copy_constant                  $7 = 0x00000002 (2.802597e-45)
  319. copy_constant                  $8 = 0x00000003 (4.203895e-45)
  320. cmpeq_4_ints                   $1..4 = equal($1..4, $5..8)
  321. bitwise_and_2_ints             $1..2 &= $3..4
  322. bitwise_and_int                $1 &= $2
  323. label                          label 0x00000024
  324. copy_slot_masked               $0 = Mask($1)
  325. label                          label 0x00000001
  326. load_condition_mask            CondMask = $20
  327. swizzle_4                      $0..3 = ($0..3).xxxx
  328. copy_4_constants               $4..7 = colorRed
  329. copy_4_constants               $8..11 = colorGreen
  330. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  331. load_src                       src.rgba = $0..3
