    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  $0 = 0xFFFFFFFF
   34. copy_slot_unmasked             EQ = $0
   35. zero_slot_unmasked             $0 = 0
   36. copy_slot_unmasked             NE = $0
   37. copy_constant                  $0 = colorGreen(0)
   38. copy_constant                  $1 = 0x3F800000 (1.0)
   39. add_float                      $0 += $1
   40. copy_slot_unmasked             _0_one = $0
   41. zero_3_slots_unmasked          _1_a[0](0..2) = 0
   42. copy_slot_unmasked             $0 = F42
   43. copy_slot_masked               _1_a[0] = Mask($0)
   44. copy_slot_unmasked             $0 = ZM
   45. copy_slot_masked               _1_a[1] = Mask($0)
   46. copy_slot_unmasked             $0 = ZP
   47. copy_slot_masked               _1_a[2] = Mask($0)
   48. zero_3_slots_unmasked          _2_b[0](0..2) = 0
   49. copy_slot_unmasked             $0 = F42
   50. copy_slot_unmasked             $1 = _0_one
   51. mul_float                      $0 *= $1
   52. copy_slot_masked               _2_b[0] = Mask($0)
   53. copy_slot_unmasked             $0 = ZM
   54. copy_slot_unmasked             $1 = _0_one
   55. mul_float                      $0 *= $1
   56. copy_slot_masked               _2_b[1] = Mask($0)
   57. copy_slot_unmasked             $0 = ZP
   58. copy_slot_unmasked             $1 = _0_one
   59. mul_float                      $0 *= $1
   60. copy_slot_masked               _2_b[2] = Mask($0)
   61. store_condition_mask           $19 = CondMask
   62. store_condition_mask           $37 = CondMask
   63. store_condition_mask           $46 = CondMask
   64. store_condition_mask           $28 = CondMask
   65. store_condition_mask           $72 = CondMask
   66. store_condition_mask           $55 = CondMask
   67. store_condition_mask           $10 = CondMask
   68. store_condition_mask           $64 = CondMask
   69. store_condition_mask           $8 = CondMask
   70. copy_slot_unmasked             $9 = EQ
   71. copy_4_slots_unmasked          $65..68 = _1_a[0](0..3)
   72. copy_2_slots_unmasked          $69..70 = _2_b[1](0..1)
   73. cmpne_3_floats                 $65..67 = notEqual($65..67, $68..70)
   74. bitwise_or_int                 $66 |= $67
   75. bitwise_or_int                 $65 |= $66
   76. merge_condition_mask           CondMask = $8 & $9
   77. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#84)
   78. copy_4_slots_unmasked          $66..69 = _1_a[0](0..3)
   79. copy_2_slots_unmasked          $70..71 = _2_b[1](0..1)
   80. cmpeq_3_floats                 $66..68 = equal($66..68, $69..71)
   81. bitwise_and_int                $67 &= $68
   82. bitwise_and_int                $66 &= $67
   83. copy_slot_masked               $65 = Mask($66)
   84. load_condition_mask            CondMask = $8
   85. zero_slot_unmasked             $11 = 0
   86. merge_condition_mask           CondMask = $64 & $65
   87. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#139)
   88. copy_slot_unmasked             $12 = NE
   89. copy_slot_unmasked             eq = $12
   90. copy_slot_unmasked             $12 = F42
   91. copy_slot_unmasked             f1 = $12
   92. copy_slot_unmasked             $12 = ZM
   93. copy_slot_unmasked             f2 = $12
   94. copy_slot_unmasked             $12 = ZP
   95. copy_slot_unmasked             f3 = $12
   96. copy_constant                  $12 = colorGreen(0)
   97. copy_constant                  $13 = 0x3F800000 (1.0)
   98. add_float                      $12 += $13
   99. copy_slot_unmasked             one = $12
  100. zero_3_slots_unmasked          a[0](0..2) = 0
  101. copy_slot_unmasked             $12 = f1
  102. copy_slot_masked               a[0] = Mask($12)
  103. copy_slot_unmasked             $12 = f2
  104. copy_slot_masked               a[1] = Mask($12)
  105. copy_slot_unmasked             $12 = f3
  106. copy_slot_masked               a[2] = Mask($12)
  107. zero_3_slots_unmasked          b[0](0..2) = 0
  108. copy_slot_unmasked             $12 = f1
  109. copy_slot_unmasked             $13 = one
  110. mul_float                      $12 *= $13
  111. copy_slot_masked               b[0] = Mask($12)
  112. copy_slot_unmasked             $12 = f2
  113. copy_slot_unmasked             $13 = one
  114. mul_float                      $12 *= $13
  115. copy_slot_masked               b[1] = Mask($12)
  116. copy_slot_unmasked             $12 = f3
  117. copy_slot_unmasked             $13 = one
  118. mul_float                      $12 *= $13
  119. copy_slot_masked               b[2] = Mask($12)
  120. store_condition_mask           $66 = CondMask
  121. copy_slot_unmasked             $67 = eq
  122. copy_4_slots_unmasked          $12..15 = a[0](0..3)
  123. copy_2_slots_unmasked          $16..17 = b[1](0..1)
  124. cmpne_3_floats                 $12..14 = notEqual($12..14, $15..17)
  125. bitwise_or_int                 $13 |= $14
  126. bitwise_or_int                 $12 |= $13
  127. merge_condition_mask           CondMask = $66 & $67
  128. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#135)
  129. copy_4_slots_unmasked          $13..16 = a[0](0..3)
  130. copy_2_slots_unmasked          $17..18 = b[1](0..1)
  131. cmpeq_3_floats                 $13..15 = equal($13..15, $16..18)
  132. bitwise_and_int                $14 &= $15
  133. bitwise_and_int                $13 &= $14
  134. copy_slot_masked               $12 = Mask($13)
  135. load_condition_mask            CondMask = $66
  136. copy_slot_masked               [test_same_arrays].result = Mask($12)
  137. bitwise_not_int                $12 = ~$12
  138. copy_slot_masked               $11 = Mask($12)
  139. load_condition_mask            CondMask = $64
  140. zero_slot_unmasked             $56 = 0
  141. merge_condition_mask           CondMask = $10 & $11
  142. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (#193)
  143. copy_slot_unmasked             $57 = NE
  144. copy_slot_unmasked             eq = $57
  145. copy_slot_unmasked             $57 = F42
  146. copy_slot_unmasked             f1 = $57
  147. copy_slot_unmasked             $57 = NAN1
  148. copy_slot_unmasked             f2 = $57
  149. copy_slot_unmasked             $57 = NAN2
  150. copy_slot_unmasked             f3 = $57
  151. copy_constant                  $57 = colorGreen(0)
  152. copy_constant                  $58 = 0x3F800000 (1.0)
  153. add_float                      $57 += $58
  154. copy_slot_unmasked             one = $57
  155. zero_3_slots_unmasked          a[0](0..2) = 0
  156. copy_slot_unmasked             $57 = f1
  157. copy_slot_masked               a[0] = Mask($57)
  158. copy_slot_unmasked             $57 = f2
  159. copy_slot_masked               a[1] = Mask($57)
  160. copy_slot_unmasked             $57 = f3
  161. copy_slot_masked               a[2] = Mask($57)
  162. zero_3_slots_unmasked          b[0](0..2) = 0
  163. copy_slot_unmasked             $57 = f1
  164. copy_slot_unmasked             $58 = one
  165. mul_float                      $57 *= $58
  166. copy_slot_masked               b[0] = Mask($57)
  167. copy_slot_unmasked             $57 = f2
  168. copy_slot_unmasked             $58 = one
  169. mul_float                      $57 *= $58
  170. copy_slot_masked               b[1] = Mask($57)
  171. copy_slot_unmasked             $57 = f3
  172. copy_slot_unmasked             $58 = one
  173. mul_float                      $57 *= $58
  174. copy_slot_masked               b[2] = Mask($57)
  175. store_condition_mask           $12 = CondMask
  176. copy_slot_unmasked             $13 = eq
  177. copy_4_slots_unmasked          $57..60 = a[0](0..3)
  178. copy_2_slots_unmasked          $61..62 = b[1](0..1)
  179. cmpne_3_floats                 $57..59 = notEqual($57..59, $60..62)
  180. bitwise_or_int                 $58 |= $59
  181. bitwise_or_int                 $57 |= $58
  182. merge_condition_mask           CondMask = $12 & $13
  183. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#190)
  184. copy_4_slots_unmasked          $58..61 = a[0](0..3)
  185. copy_2_slots_unmasked          $62..63 = b[1](0..1)
  186. cmpeq_3_floats                 $58..60 = equal($58..60, $61..63)
  187. bitwise_and_int                $59 &= $60
  188. bitwise_and_int                $58 &= $59
  189. copy_slot_masked               $57 = Mask($58)
  190. load_condition_mask            CondMask = $12
  191. copy_slot_masked               [test_same_arrays].result = Mask($57)
  192. copy_slot_masked               $56 = Mask($57)
  193. load_condition_mask            CondMask = $10
  194. zero_slot_unmasked             $73 = 0
  195. merge_condition_mask           CondMask = $55 & $56
  196. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#248)
  197. copy_slot_unmasked             $74 = EQ
  198. copy_slot_unmasked             eq = $74
  199. copy_slot_unmasked             $74 = F42
  200. copy_slot_unmasked             f1 = $74
  201. copy_slot_unmasked             $74 = NAN1
  202. copy_slot_unmasked             f2 = $74
  203. copy_slot_unmasked             $74 = NAN2
  204. copy_slot_unmasked             f3 = $74
  205. copy_constant                  $74 = colorGreen(0)
  206. copy_constant                  $75 = 0x3F800000 (1.0)
  207. add_float                      $74 += $75
  208. copy_slot_unmasked             one = $74
  209. zero_3_slots_unmasked          a[0](0..2) = 0
  210. copy_slot_unmasked             $74 = f1
  211. copy_slot_masked               a[0] = Mask($74)
  212. copy_slot_unmasked             $74 = f2
  213. copy_slot_masked               a[1] = Mask($74)
  214. copy_slot_unmasked             $74 = f3
  215. copy_slot_masked               a[2] = Mask($74)
  216. zero_3_slots_unmasked          b[0](0..2) = 0
  217. copy_slot_unmasked             $74 = f1
  218. copy_slot_unmasked             $75 = one
  219. mul_float                      $74 *= $75
  220. copy_slot_masked               b[0] = Mask($74)
  221. copy_slot_unmasked             $74 = f2
  222. copy_slot_unmasked             $75 = one
  223. mul_float                      $74 *= $75
  224. copy_slot_masked               b[1] = Mask($74)
  225. copy_slot_unmasked             $74 = f3
  226. copy_slot_unmasked             $75 = one
  227. mul_float                      $74 *= $75
  228. copy_slot_masked               b[2] = Mask($74)
  229. store_condition_mask           $57 = CondMask
  230. copy_slot_unmasked             $58 = eq
  231. copy_4_slots_unmasked          $74..77 = a[0](0..3)
  232. copy_2_slots_unmasked          $78..79 = b[1](0..1)
  233. cmpne_3_floats                 $74..76 = notEqual($74..76, $77..79)
  234. bitwise_or_int                 $75 |= $76
  235. bitwise_or_int                 $74 |= $75
  236. merge_condition_mask           CondMask = $57 & $58
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#244)
  238. copy_4_slots_unmasked          $75..78 = a[0](0..3)
  239. copy_2_slots_unmasked          $79..80 = b[1](0..1)
  240. cmpeq_3_floats                 $75..77 = equal($75..77, $78..80)
  241. bitwise_and_int                $76 &= $77
  242. bitwise_and_int                $75 &= $76
  243. copy_slot_masked               $74 = Mask($75)
  244. load_condition_mask            CondMask = $57
  245. copy_slot_masked               [test_same_arrays].result = Mask($74)
  246. bitwise_not_int                $74 = ~$74
  247. copy_slot_masked               $73 = Mask($74)
  248. load_condition_mask            CondMask = $55
  249. zero_slot_unmasked             $29 = 0
  250. merge_condition_mask           CondMask = $72 & $73
  251. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#300)
  252. copy_slot_unmasked             $30 = NE
  253. copy_slot_unmasked             eq = $30
  254. copy_slot_unmasked             $30 = F42
  255. copy_slot_unmasked             f1 = $30
  256. copy_slot_unmasked             $30 = F43
  257. copy_slot_unmasked             f2 = $30
  258. copy_slot_unmasked             $30 = F44
  259. copy_slot_unmasked             f3 = $30
  260. copy_constant                  $30 = colorGreen(0)
  261. copy_constant                  $31 = 0x40000000 (2.0)
  262. add_float                      $30 += $31
  263. copy_slot_unmasked             two = $30
  264. zero_3_slots_unmasked          a[0](0..2) = 0
  265. copy_slot_unmasked             $30 = f1
  266. copy_slot_masked               a[0] = Mask($30)
  267. copy_slot_unmasked             $30 = f2
  268. copy_slot_masked               a[1] = Mask($30)
  269. copy_slot_unmasked             $30 = f3
  270. copy_slot_masked               a[2] = Mask($30)
  271. zero_3_slots_unmasked          b[0](0..2) = 0
  272. copy_slot_unmasked             $30 = f1
  273. copy_slot_unmasked             $31 = two
  274. mul_float                      $30 *= $31
  275. copy_slot_masked               b[0] = Mask($30)
  276. copy_slot_unmasked             $30 = f2
  277. copy_slot_unmasked             $31 = two
  278. mul_float                      $30 *= $31
  279. copy_slot_masked               b[1] = Mask($30)
  280. copy_slot_unmasked             $30 = f3
  281. copy_slot_masked               b[2] = Mask($30)
  282. store_condition_mask           $74 = CondMask
  283. copy_slot_unmasked             $75 = eq
  284. copy_4_slots_unmasked          $30..33 = a[0](0..3)
  285. copy_2_slots_unmasked          $34..35 = b[1](0..1)
  286. cmpne_3_floats                 $30..32 = notEqual($30..32, $33..35)
  287. bitwise_or_int                 $31 |= $32
  288. bitwise_or_int                 $30 |= $31
  289. merge_condition_mask           CondMask = $74 & $75
  290. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#297)
  291. copy_4_slots_unmasked          $31..34 = a[0](0..3)
  292. copy_2_slots_unmasked          $35..36 = b[1](0..1)
  293. cmpeq_3_floats                 $31..33 = equal($31..33, $34..36)
  294. bitwise_and_int                $32 &= $33
  295. bitwise_and_int                $31 &= $32
  296. copy_slot_masked               $30 = Mask($31)
  297. load_condition_mask            CondMask = $74
  298. copy_slot_masked               [test_diff_arrays].result = Mask($30)
  299. copy_slot_masked               $29 = Mask($30)
  300. load_condition_mask            CondMask = $72
  301. zero_slot_unmasked             $47 = 0
  302. merge_condition_mask           CondMask = $28 & $29
  303. branch_if_no_active_lanes      branch_if_no_active_lanes +50 (#353)
  304. copy_slot_unmasked             $48 = EQ
  305. copy_slot_unmasked             eq = $48
  306. copy_slot_unmasked             $48 = F42
  307. copy_slot_unmasked             f1 = $48
  308. copy_slot_unmasked             $48 = F43
  309. copy_slot_unmasked             f2 = $48
  310. copy_slot_unmasked             $48 = F44
  311. copy_slot_unmasked             f3 = $48
  312. copy_constant                  $48 = colorGreen(0)
  313. copy_constant                  $49 = 0x40000000 (2.0)
  314. add_float                      $48 += $49
  315. copy_slot_unmasked             two = $48
  316. zero_3_slots_unmasked          a[0](0..2) = 0
  317. copy_slot_unmasked             $48 = f1
  318. copy_slot_masked               a[0] = Mask($48)
  319. copy_slot_unmasked             $48 = f2
  320. copy_slot_masked               a[1] = Mask($48)
  321. copy_slot_unmasked             $48 = f3
  322. copy_slot_masked               a[2] = Mask($48)
  323. zero_3_slots_unmasked          b[0](0..2) = 0
  324. copy_slot_unmasked             $48 = f1
  325. copy_slot_unmasked             $49 = two
  326. mul_float                      $48 *= $49
  327. copy_slot_masked               b[0] = Mask($48)
  328. copy_slot_unmasked             $48 = f2
  329. copy_slot_unmasked             $49 = two
  330. mul_float                      $48 *= $49
  331. copy_slot_masked               b[1] = Mask($48)
  332. copy_slot_unmasked             $48 = f3
  333. copy_slot_masked               b[2] = Mask($48)
  334. store_condition_mask           $30 = CondMask
  335. copy_slot_unmasked             $31 = eq
  336. copy_4_slots_unmasked          $48..51 = a[0](0..3)
  337. copy_2_slots_unmasked          $52..53 = b[1](0..1)
  338. cmpne_3_floats                 $48..50 = notEqual($48..50, $51..53)
  339. bitwise_or_int                 $49 |= $50
  340. bitwise_or_int                 $48 |= $49
  341. merge_condition_mask           CondMask = $30 & $31
  342. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#349)
  343. copy_4_slots_unmasked          $49..52 = a[0](0..3)
  344. copy_2_slots_unmasked          $53..54 = b[1](0..1)
  345. cmpeq_3_floats                 $49..51 = equal($49..51, $52..54)
  346. bitwise_and_int                $50 &= $51
  347. bitwise_and_int                $49 &= $50
  348. copy_slot_masked               $48 = Mask($49)
  349. load_condition_mask            CondMask = $30
  350. copy_slot_masked               [test_diff_arrays].result = Mask($48)
  351. bitwise_not_int                $48 = ~$48
  352. copy_slot_masked               $47 = Mask($48)
  353. load_condition_mask            CondMask = $28
  354. zero_slot_unmasked             $38 = 0
  355. merge_condition_mask           CondMask = $46 & $47
  356. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#405)
  357. copy_slot_unmasked             $39 = NE
  358. copy_slot_unmasked             eq = $39
  359. copy_slot_unmasked             $39 = NAN1
  360. copy_slot_unmasked             f1 = $39
  361. copy_slot_unmasked             $39 = ZM
  362. copy_slot_unmasked             f2 = $39
  363. copy_slot_unmasked             $39 = ZP
  364. copy_slot_unmasked             f3 = $39
  365. copy_constant                  $39 = colorGreen(0)
  366. copy_constant                  $40 = 0x40000000 (2.0)
  367. add_float                      $39 += $40
  368. copy_slot_unmasked             two = $39
  369. zero_3_slots_unmasked          a[0](0..2) = 0
  370. copy_slot_unmasked             $39 = f1
  371. copy_slot_masked               a[0] = Mask($39)
  372. copy_slot_unmasked             $39 = f2
  373. copy_slot_masked               a[1] = Mask($39)
  374. copy_slot_unmasked             $39 = f3
  375. copy_slot_masked               a[2] = Mask($39)
  376. zero_3_slots_unmasked          b[0](0..2) = 0
  377. copy_slot_unmasked             $39 = f1
  378. copy_slot_unmasked             $40 = two
  379. mul_float                      $39 *= $40
  380. copy_slot_masked               b[0] = Mask($39)
  381. copy_slot_unmasked             $39 = f2
  382. copy_slot_unmasked             $40 = two
  383. mul_float                      $39 *= $40
  384. copy_slot_masked               b[1] = Mask($39)
  385. copy_slot_unmasked             $39 = f3
  386. copy_slot_masked               b[2] = Mask($39)
  387. store_condition_mask           $48 = CondMask
  388. copy_slot_unmasked             $49 = eq
  389. copy_4_slots_unmasked          $39..42 = a[0](0..3)
  390. copy_2_slots_unmasked          $43..44 = b[1](0..1)
  391. cmpne_3_floats                 $39..41 = notEqual($39..41, $42..44)
  392. bitwise_or_int                 $40 |= $41
  393. bitwise_or_int                 $39 |= $40
  394. merge_condition_mask           CondMask = $48 & $49
  395. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#402)
  396. copy_4_slots_unmasked          $40..43 = a[0](0..3)
  397. copy_2_slots_unmasked          $44..45 = b[1](0..1)
  398. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
  399. bitwise_and_int                $41 &= $42
  400. bitwise_and_int                $40 &= $41
  401. copy_slot_masked               $39 = Mask($40)
  402. load_condition_mask            CondMask = $48
  403. copy_slot_masked               [test_diff_arrays].result = Mask($39)
  404. copy_slot_masked               $38 = Mask($39)
  405. load_condition_mask            CondMask = $46
  406. zero_slot_unmasked             $20 = 0
  407. merge_condition_mask           CondMask = $37 & $38
  408. branch_if_no_active_lanes      branch_if_no_active_lanes +50 (#458)
  409. copy_slot_unmasked             $21 = EQ
  410. copy_slot_unmasked             eq = $21
  411. copy_slot_unmasked             $21 = NAN1
  412. copy_slot_unmasked             f1 = $21
  413. copy_slot_unmasked             $21 = ZM
  414. copy_slot_unmasked             f2 = $21
  415. copy_slot_unmasked             $21 = ZP
  416. copy_slot_unmasked             f3 = $21
  417. copy_constant                  $21 = colorGreen(0)
  418. copy_constant                  $22 = 0x40000000 (2.0)
  419. add_float                      $21 += $22
  420. copy_slot_unmasked             two = $21
  421. zero_3_slots_unmasked          a[0](0..2) = 0
  422. copy_slot_unmasked             $21 = f1
  423. copy_slot_masked               a[0] = Mask($21)
  424. copy_slot_unmasked             $21 = f2
  425. copy_slot_masked               a[1] = Mask($21)
  426. copy_slot_unmasked             $21 = f3
  427. copy_slot_masked               a[2] = Mask($21)
  428. zero_3_slots_unmasked          b[0](0..2) = 0
  429. copy_slot_unmasked             $21 = f1
  430. copy_slot_unmasked             $22 = two
  431. mul_float                      $21 *= $22
  432. copy_slot_masked               b[0] = Mask($21)
  433. copy_slot_unmasked             $21 = f2
  434. copy_slot_unmasked             $22 = two
  435. mul_float                      $21 *= $22
  436. copy_slot_masked               b[1] = Mask($21)
  437. copy_slot_unmasked             $21 = f3
  438. copy_slot_masked               b[2] = Mask($21)
  439. store_condition_mask           $39 = CondMask
  440. copy_slot_unmasked             $40 = eq
  441. copy_4_slots_unmasked          $21..24 = a[0](0..3)
  442. copy_2_slots_unmasked          $25..26 = b[1](0..1)
  443. cmpne_3_floats                 $21..23 = notEqual($21..23, $24..26)
  444. bitwise_or_int                 $22 |= $23
  445. bitwise_or_int                 $21 |= $22
  446. merge_condition_mask           CondMask = $39 & $40
  447. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#454)
  448. copy_4_slots_unmasked          $22..25 = a[0](0..3)
  449. copy_2_slots_unmasked          $26..27 = b[1](0..1)
  450. cmpeq_3_floats                 $22..24 = equal($22..24, $25..27)
  451. bitwise_and_int                $23 &= $24
  452. bitwise_and_int                $22 &= $23
  453. copy_slot_masked               $21 = Mask($22)
  454. load_condition_mask            CondMask = $39
  455. copy_slot_masked               [test_diff_arrays].result = Mask($21)
  456. bitwise_not_int                $21 = ~$21
  457. copy_slot_masked               $20 = Mask($21)
  458. load_condition_mask            CondMask = $37
  459. copy_4_constants               $0..3 = colorRed
  460. merge_condition_mask           CondMask = $19 & $20
  461. copy_4_constants               $4..7 = colorGreen
  462. copy_4_slots_masked            $0..3 = Mask($4..7)
  463. load_condition_mask            CondMask = $19
  464. copy_4_slots_masked            [main].result = Mask($0..3)
  465. load_src                       src.rgba = [main].result
