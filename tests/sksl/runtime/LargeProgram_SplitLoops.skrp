    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. copy_slot_unmasked             i = $0
    5. branch_if_no_active_lanes      branch_if_no_active_lanes +92 (#97)
    6. copy_slot_unmasked             $0 = i
    7. copy_slot_unmasked             i = $0
    8. zero_slot_unmasked             $0 = 0
    9. copy_slot_unmasked             x = $0
   10. store_loop_mask                $0 = LoopMask
   11. jump                           jump +77 (#88)
   12. zero_slot_unmasked             [for-loop continue mask 0] = 0
   13. branch_if_no_active_lanes      branch_if_no_active_lanes +70 (#83)
   14. copy_slot_unmasked             $1 = i
   15. copy_slot_unmasked             i = $1
   16. zero_slot_unmasked             $1 = 0
   17. copy_slot_unmasked             x = $1
   18. store_loop_mask                $1 = LoopMask
   19. jump                           jump +55 (#74)
   20. zero_slot_unmasked             [for-loop continue mask 1] = 0
   21. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (#69)
   22. copy_slot_unmasked             $2 = i
   23. copy_slot_unmasked             i = $2
   24. zero_slot_unmasked             $2 = 0
   25. copy_slot_unmasked             x = $2
   26. store_loop_mask                $2 = LoopMask
   27. jump                           jump +33 (#60)
   28. zero_slot_unmasked             [for-loop continue mask 2] = 0
   29. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (#55)
   30. copy_slot_unmasked             $3 = i
   31. copy_slot_unmasked             i = $3
   32. zero_slot_unmasked             $3 = 0
   33. copy_slot_unmasked             x = $3
   34. store_loop_mask                $3 = LoopMask
   35. jump                           jump +11 (#46)
   36. zero_slot_unmasked             [for-loop continue mask 3] = 0
   37. copy_slot_unmasked             $4 = i
   38. copy_constant                  $5 = 0x00000001 (1.401298e-45)
   39. add_int                        $4 += $5
   40. copy_slot_masked               i = Mask($4)
   41. reenable_loop_mask             LoopMask |= [for-loop continue mask 3]
   42. copy_slot_unmasked             $4 = x
   43. copy_constant                  $5 = 0x00000001 (1.401298e-45)
   44. add_int                        $4 += $5
   45. copy_slot_masked               x = Mask($4)
   46. copy_slot_unmasked             $4 = x
   47. copy_constant                  $5 = 0x0000000A (1.401298e-44)
   48. cmplt_int                      $4 = lessThan($4, $5)
   49. merge_loop_mask                LoopMask &= $4
   50. stack_rewind
   51. branch_if_any_active_lanes     branch_if_any_active_lanes -15 (#36)
   52. load_loop_mask                 LoopMask = $3
   53. copy_slot_unmasked             $3 = i
   54. copy_slot_masked               i = Mask($3)
   55. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
   56. copy_slot_unmasked             $3 = x
   57. copy_constant                  $4 = 0x00000001 (1.401298e-45)
   58. add_int                        $3 += $4
   59. copy_slot_masked               x = Mask($3)
   60. copy_slot_unmasked             $3 = x
   61. copy_constant                  $4 = 0x0000000A (1.401298e-44)
   62. cmplt_int                      $3 = lessThan($3, $4)
   63. merge_loop_mask                LoopMask &= $3
   64. stack_rewind
   65. branch_if_any_active_lanes     branch_if_any_active_lanes -37 (#28)
   66. load_loop_mask                 LoopMask = $2
   67. copy_slot_unmasked             $2 = i
   68. copy_slot_masked               i = Mask($2)
   69. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   70. copy_slot_unmasked             $2 = x
   71. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   72. add_int                        $2 += $3
   73. copy_slot_masked               x = Mask($2)
   74. copy_slot_unmasked             $2 = x
   75. copy_constant                  $3 = 0x0000000A (1.401298e-44)
   76. cmplt_int                      $2 = lessThan($2, $3)
   77. merge_loop_mask                LoopMask &= $2
   78. stack_rewind
   79. branch_if_any_active_lanes     branch_if_any_active_lanes -59 (#20)
   80. load_loop_mask                 LoopMask = $1
   81. copy_slot_unmasked             $1 = i
   82. copy_slot_masked               i = Mask($1)
   83. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   84. copy_slot_unmasked             $1 = x
   85. copy_constant                  $2 = 0x00000001 (1.401298e-45)
   86. add_int                        $1 += $2
   87. copy_slot_masked               x = Mask($1)
   88. copy_slot_unmasked             $1 = x
   89. copy_constant                  $2 = 0x0000000A (1.401298e-44)
   90. cmplt_int                      $1 = lessThan($1, $2)
   91. merge_loop_mask                LoopMask &= $1
   92. stack_rewind
   93. branch_if_any_active_lanes     branch_if_any_active_lanes -81 (#12)
   94. load_loop_mask                 LoopMask = $0
   95. copy_slot_unmasked             $0 = i
   96. copy_slot_masked               i = Mask($0)
   97. zero_slot_unmasked             $0 = 0
   98. swizzle_4                      $0..3 = ($0..3).xxxx
   99. copy_4_slots_masked            [main].result = Mask($0..3)
  100. load_src                       src.rgba = [main].result
