    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_2_slots_unmasked          expected, i = 0
    4. store_loop_mask                $0 = LoopMask
    5. jump                           jump +49 (label 0 at #54)
    6. label                          label 0x00000001
    7. zero_slot_unmasked             j = 0
    8. store_loop_mask                $1 = LoopMask
    9. jump                           jump +33 (label 2 at #42)
   10. label                          label 0x00000003
   11. copy_slot_unmasked             $2 = expected
   12. copy_constant                  $3 = 0x3F800000 (1.0)
   13. add_float                      $2 += $3
   14. copy_slot_masked               expected = Mask($2)
   15. store_condition_mask           $2 = CondMask
   16. copy_slot_unmasked             $19 = i
   17. copy_constant                  $20 = 0x00000003 (4.203895e-45)
   18. mul_int                        $19 *= $20
   19. copy_slot_unmasked             $17 = j
   20. copy_slot_unmasked             $18 = $19
   21. add_int                        $17 += $18
   22. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 4 at #29)
   23. copy_4_constants               $8..11 = testMatrix3x3(0..3)
   24. copy_4_constants               $12..15 = testMatrix3x3(4..7)
   25. copy_constant                  $16 = testMatrix3x3(8)
   26. copy_4_slots_masked            [GetTestMatrix].result(0..3) = Mask($8..11)
   27. copy_4_slots_masked            [GetTestMatrix].result(4..7) = Mask($12..15)
   28. copy_slot_masked               [GetTestMatrix].result(8) = Mask($16)
   29. label                          label 0x00000004
   30. copy_from_indirect_unmasked    $3 = Indirect($8 + $17)
   31. copy_slot_unmasked             $4 = expected
   32. cmpne_float                    $3 = notEqual($3, $4)
   33. merge_condition_mask           CondMask = $2 & $3
   34. copy_4_constants               $4..7 = colorRed
   35. copy_4_slots_masked            [main].result = Mask($4..7)
   36. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   37. load_condition_mask            CondMask = $2
   38. copy_slot_unmasked             $2 = j
   39. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   40. add_int                        $2 += $3
   41. copy_slot_masked               j = Mask($2)
   42. label                          label 0x00000002
   43. copy_slot_unmasked             $2 = j
   44. copy_constant                  $3 = 0x00000003 (4.203895e-45)
   45. cmplt_int                      $2 = lessThan($2, $3)
   46. merge_loop_mask                LoopMask &= $2
   47. stack_rewind
   48. branch_if_any_active_lanes     branch_if_any_active_lanes -38 (label 3 at #10)
   49. load_loop_mask                 LoopMask = $1
   50. copy_slot_unmasked             $1 = i
   51. copy_constant                  $2 = 0x00000001 (1.401298e-45)
   52. add_int                        $1 += $2
   53. copy_slot_masked               i = Mask($1)
   54. label                          label 0x00000000
   55. copy_slot_unmasked             $1 = i
   56. copy_constant                  $2 = 0x00000003 (4.203895e-45)
   57. cmplt_int                      $1 = lessThan($1, $2)
   58. merge_loop_mask                LoopMask &= $1
   59. stack_rewind
   60. branch_if_any_active_lanes     branch_if_any_active_lanes -54 (label 1 at #6)
   61. load_loop_mask                 LoopMask = $0
   62. copy_4_constants               $0..3 = colorGreen
   63. copy_4_slots_masked            [main].result = Mask($0..3)
   64. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   65. load_src                       src.rgba = [main].result
