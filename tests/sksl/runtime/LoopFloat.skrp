    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x41200000 (10.0)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. copy_constant                  $1 = 0x40A00000 (5.0)
   11. mul_float                      $0 *= $1
   12. copy_slot_unmasked             five = $0
   13. store_condition_mask           $24 = CondMask
   14. store_condition_mask           $44 = CondMask
   15. store_condition_mask           $54 = CondMask
   16. store_condition_mask           $34 = CondMask
   17. store_condition_mask           $74 = CondMask
   18. store_condition_mask           $64 = CondMask
   19. store_condition_mask           $18 = CondMask
   20. store_condition_mask           $68 = CondMask
   21. store_condition_mask           $12 = CondMask
   22. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (label 10 at #54)
   23. store_return_mask              $13 = RetMask
   24. copy_slot_unmasked             five₁ = five
   25. copy_slot_unmasked             i = kZero
   26. store_loop_mask                $14 = LoopMask
   27. jump                           jump +15 (label 11 at #42)
   28. label                          label 0x0000000C
   29. store_condition_mask           $15 = CondMask
   30. copy_slot_unmasked             $16 = i
   31. copy_slot_unmasked             $17 = five₁
   32. cmpeq_float                    $16 = equal($16, $17)
   33. merge_condition_mask           CondMask = $15 & $16
   34. copy_slot_unmasked             $17 = i
   35. copy_slot_masked               [return_loop].result = Mask($17)
   36. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   37. load_condition_mask            CondMask = $15
   38. copy_slot_unmasked             $15 = i
   39. copy_constant                  $16 = 0x3F800000 (1.0)
   40. add_float                      $15 += $16
   41. copy_slot_masked               i = Mask($15)
   42. label                          label 0x0000000B
   43. copy_slot_unmasked             $15 = i
   44. copy_constant                  $16 = 0x41200000 (10.0)
   45. cmplt_float                    $15 = lessThan($15, $16)
   46. merge_loop_mask                LoopMask &= $15
   47. stack_rewind
   48. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 12 at #28)
   49. load_loop_mask                 LoopMask = $14
   50. zero_slot_unmasked             $14 = 0
   51. copy_slot_masked               [return_loop].result = Mask($14)
   52. load_return_mask               RetMask = $13
   53. copy_slot_unmasked             $13 = [return_loop].result
   54. label                          label 0x0000000A
   55. copy_constant                  $14 = 0x40A00000 (5.0)
   56. cmpeq_float                    $13 = equal($13, $14)
   57. zero_slot_unmasked             $69 = 0
   58. merge_condition_mask           CondMask = $12 & $13
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +37 (label 9 at #96)
   60. copy_slot_unmasked             five₂ = five
   61. zero_2_slots_unmasked          sum, i₁ = 0
   62. store_loop_mask                $70 = LoopMask
   63. jump                           jump +20 (label 14 at #83)
   64. label                          label 0x0000000F
   65. zero_slot_unmasked             [temporary 0] = 0
   66. store_condition_mask           $71 = CondMask
   67. copy_slot_unmasked             $72 = i₁
   68. copy_slot_unmasked             $73 = five₂
   69. cmplt_float                    $72 = lessThan($72, $73)
   70. merge_condition_mask           CondMask = $71 & $72
   71. copy_constant                  $73 = 0xFFFFFFFF
   72. copy_slot_masked               [temporary 0] = Mask($73)
   73. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   74. load_condition_mask            CondMask = $71
   75. copy_2_slots_unmasked          $71..72 = sum, i₁
   76. add_float                      $71 += $72
   77. copy_slot_masked               sum = Mask($71)
   78. reenable_loop_mask             LoopMask |= [temporary 0]
   79. copy_slot_unmasked             $71 = i₁
   80. copy_constant                  $72 = 0x3F800000 (1.0)
   81. add_float                      $71 += $72
   82. copy_slot_masked               i₁ = Mask($71)
   83. label                          label 0x0000000E
   84. copy_slot_unmasked             $71 = i₁
   85. copy_slot_unmasked             $72 = kTen
   86. cmplt_float                    $71 = lessThan($71, $72)
   87. merge_loop_mask                LoopMask &= $71
   88. stack_rewind
   89. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 15 at #64)
   90. load_loop_mask                 LoopMask = $70
   91. copy_slot_unmasked             $70 = sum
   92. label                          label 0x0000000D
   93. copy_constant                  $71 = 0x420C0000 (35.0)
   94. cmpeq_float                    $70 = equal($70, $71)
   95. copy_slot_masked               $69 = Mask($70)
   96. label                          label 0x00000009
   97. load_condition_mask            CondMask = $12
   98. zero_slot_unmasked             $19 = 0
   99. merge_condition_mask           CondMask = $68 & $69
  100. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (label 8 at #136)
  101. copy_slot_unmasked             five₃ = five
  102. zero_slot_unmasked             sum₁ = 0
  103. copy_constant                  kOne = 0x3F800000 (1.0)
  104. zero_slot_unmasked             i₂ = 0
  105. store_loop_mask                $20 = LoopMask
  106. jump                           jump +17 (label 17 at #123)
  107. label                          label 0x00000012
  108. store_condition_mask           $21 = CondMask
  109. copy_slot_unmasked             $22 = five₃
  110. copy_slot_unmasked             $23 = i₂
  111. cmplt_float                    $22 = lessThan($22, $23)
  112. merge_condition_mask           CondMask = $21 & $22
  113. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  114. load_condition_mask            CondMask = $21
  115. copy_slot_unmasked             $21 = sum₁
  116. copy_slot_unmasked             $22 = i₂
  117. add_float                      $21 += $22
  118. copy_slot_masked               sum₁ = Mask($21)
  119. copy_slot_unmasked             $21 = i₂
  120. copy_slot_unmasked             $22 = kOne
  121. add_float                      $21 += $22
  122. copy_slot_masked               i₂ = Mask($21)
  123. label                          label 0x00000011
  124. copy_slot_unmasked             $21 = i₂
  125. copy_constant                  $22 = 0x41200000 (10.0)
  126. cmplt_float                    $21 = lessThan($21, $22)
  127. merge_loop_mask                LoopMask &= $21
  128. stack_rewind
  129. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 18 at #107)
  130. load_loop_mask                 LoopMask = $20
  131. copy_slot_unmasked             $20 = sum₁
  132. label                          label 0x00000010
  133. copy_constant                  $21 = 0x41700000 (15.0)
  134. cmpeq_float                    $20 = equal($20, $21)
  135. copy_slot_masked               $19 = Mask($20)
  136. label                          label 0x00000008
  137. load_condition_mask            CondMask = $68
  138. zero_slot_unmasked             $65 = 0
  139. merge_condition_mask           CondMask = $18 & $19
  140. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (label 7 at #165)
  141. zero_slot_unmasked             sum₂ = 0
  142. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 20 at #156)
  143. copy_constant                  i₃ = 0x3DFBE76D (0.123)
  144. label                          label 0x00000015
  145. copy_2_slots_unmasked          $66..67 = sum₂, i₃
  146. add_float                      $66 += $67
  147. copy_slot_masked               sum₂ = Mask($66)
  148. copy_slot_unmasked             $66 = i₃
  149. copy_constant                  $67 = 0x3DE353F8 (0.111)
  150. add_float                      $66 += $67
  151. copy_slot_masked               i₃ = Mask($66)
  152. copy_constant                  $67 = 0x3F19999A (0.6)
  153. cmplt_float                    $66 = lessThan($66, $67)
  154. stack_rewind
  155. branch_if_no_active_lanes_eq   branch -11 (label 21 at #144) if no lanes of $66 == 0x00000000 (0.0)
  156. label                          label 0x00000014
  157. copy_slot_unmasked             $66 = sum₂
  158. copy_constant                  $67 = 0x3FDCCCCD (1.725)
  159. sub_float                      $66 -= $67
  160. label                          label 0x00000013
  161. abs_float                      $66 = abs($66)
  162. copy_constant                  $67 = 0x3CCCCCCD (0.025)
  163. cmplt_float                    $66 = lessThan($66, $67)
  164. copy_slot_masked               $65 = Mask($66)
  165. label                          label 0x00000007
  166. load_condition_mask            CondMask = $18
  167. zero_slot_unmasked             $75 = 0
  168. merge_condition_mask           CondMask = $64 & $65
  169. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 6 at #197)
  170. copy_constant                  $76 = 0x41100000 (9.0)
  171. swizzle_4                      $76..79 = ($76..79).xxxx
  172. copy_4_slots_unmasked          result = $76..79
  173. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 23 at #186)
  174. copy_constant                  i₄ = 0x3F800000 (1.0)
  175. label                          label 0x00000018
  176. copy_4_slots_unmasked          $76..79 = result(1..3), i₄
  177. copy_4_slots_masked            result = Mask($76..79)
  178. copy_slot_unmasked             $76 = i₄
  179. copy_constant                  $77 = 0x3F800000 (1.0)
  180. add_float                      $76 += $77
  181. copy_slot_masked               i₄ = Mask($76)
  182. copy_constant                  $77 = 0x40400000 (3.0)
  183. cmple_float                    $76 = lessThanEqual($76, $77)
  184. stack_rewind
  185. branch_if_no_active_lanes_eq   branch -10 (label 24 at #175) if no lanes of $76 == 0x00000000 (0.0)
  186. label                          label 0x00000017
  187. copy_4_slots_unmasked          $76..79 = result
  188. copy_constant                  $80 = 0x41100000 (9.0)
  189. copy_constant                  $81 = 0x3F800000 (1.0)
  190. copy_constant                  $82 = 0x40000000 (2.0)
  191. copy_constant                  $83 = 0x40400000 (3.0)
  192. cmpeq_4_floats                 $76..79 = equal($76..79, $80..83)
  193. bitwise_and_2_ints             $76..77 &= $78..79
  194. bitwise_and_int                $76 &= $77
  195. label                          label 0x00000016
  196. copy_slot_masked               $75 = Mask($76)
  197. label                          label 0x00000006
  198. load_condition_mask            CondMask = $64
  199. zero_slot_unmasked             $35 = 0
  200. merge_condition_mask           CondMask = $74 & $75
  201. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 5 at #229)
  202. copy_constant                  $36 = 0x41100000 (9.0)
  203. swizzle_4                      $36..39 = ($36..39).xxxx
  204. copy_4_slots_unmasked          result₁ = $36..39
  205. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 26 at #218)
  206. copy_constant                  i₅ = 0x3F800000 (1.0)
  207. label                          label 0x0000001B
  208. copy_4_slots_unmasked          $36..39 = result₁(1..3), i₅
  209. copy_4_slots_masked            result₁ = Mask($36..39)
  210. copy_slot_unmasked             $36 = i₅
  211. copy_constant                  $37 = 0x3F800000 (1.0)
  212. add_float                      $36 += $37
  213. copy_slot_masked               i₅ = Mask($36)
  214. copy_constant                  $37 = 0x40800000 (4.0)
  215. cmplt_float                    $36 = lessThan($36, $37)
  216. stack_rewind
  217. branch_if_no_active_lanes_eq   branch -10 (label 27 at #207) if no lanes of $36 == 0x00000000 (0.0)
  218. label                          label 0x0000001A
  219. copy_4_slots_unmasked          $36..39 = result₁
  220. copy_constant                  $40 = 0x41100000 (9.0)
  221. copy_constant                  $41 = 0x3F800000 (1.0)
  222. copy_constant                  $42 = 0x40000000 (2.0)
  223. copy_constant                  $43 = 0x40400000 (3.0)
  224. cmpeq_4_floats                 $36..39 = equal($36..39, $40..43)
  225. bitwise_and_2_ints             $36..37 &= $38..39
  226. bitwise_and_int                $36 &= $37
  227. label                          label 0x00000019
  228. copy_slot_masked               $35 = Mask($36)
  229. label                          label 0x00000005
  230. load_condition_mask            CondMask = $74
  231. zero_slot_unmasked             $55 = 0
  232. merge_condition_mask           CondMask = $34 & $35
  233. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 4 at #262)
  234. copy_constant                  $56 = 0x41100000 (9.0)
  235. swizzle_4                      $56..59 = ($56..59).xxxx
  236. copy_4_slots_unmasked          result₂ = $56..59
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 29 at #251)
  238. copy_constant                  i₆ = 0x40400000 (3.0)
  239. label                          label 0x0000001E
  240. copy_4_slots_unmasked          $56..59 = result₂(1..3), i₆
  241. copy_4_slots_masked            result₂ = Mask($56..59)
  242. copy_slot_unmasked             $56 = i₆
  243. copy_constant                  $57 = 0x3F800000 (1.0)
  244. sub_float                      $56 -= $57
  245. copy_slot_masked               i₆ = Mask($56)
  246. copy_constant                  $56 = 0x3F800000 (1.0)
  247. copy_slot_unmasked             $57 = i₆
  248. cmple_float                    $56 = lessThanEqual($56, $57)
  249. stack_rewind
  250. branch_if_no_active_lanes_eq   branch -11 (label 30 at #239) if no lanes of $56 == 0x00000000 (0.0)
  251. label                          label 0x0000001D
  252. copy_4_slots_unmasked          $56..59 = result₂
  253. copy_constant                  $60 = 0x41100000 (9.0)
  254. copy_constant                  $61 = 0x40400000 (3.0)
  255. copy_constant                  $62 = 0x40000000 (2.0)
  256. copy_constant                  $63 = 0x3F800000 (1.0)
  257. cmpeq_4_floats                 $56..59 = equal($56..59, $60..63)
  258. bitwise_and_2_ints             $56..57 &= $58..59
  259. bitwise_and_int                $56 &= $57
  260. label                          label 0x0000001C
  261. copy_slot_masked               $55 = Mask($56)
  262. label                          label 0x00000004
  263. load_condition_mask            CondMask = $34
  264. zero_slot_unmasked             $45 = 0
  265. merge_condition_mask           CondMask = $54 & $55
  266. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 3 at #295)
  267. copy_constant                  $46 = 0x41100000 (9.0)
  268. swizzle_4                      $46..49 = ($46..49).xxxx
  269. copy_4_slots_unmasked          result₃ = $46..49
  270. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 32 at #284)
  271. copy_constant                  i₇ = 0x40400000 (3.0)
  272. label                          label 0x00000021
  273. copy_4_slots_unmasked          $46..49 = result₃(1..3), i₇
  274. copy_4_slots_masked            result₃ = Mask($46..49)
  275. copy_slot_unmasked             $46 = i₇
  276. copy_constant                  $47 = 0x3F800000 (1.0)
  277. sub_float                      $46 -= $47
  278. copy_slot_masked               i₇ = Mask($46)
  279. zero_slot_unmasked             $46 = 0
  280. copy_slot_unmasked             $47 = i₇
  281. cmplt_float                    $46 = lessThan($46, $47)
  282. stack_rewind
  283. branch_if_no_active_lanes_eq   branch -11 (label 33 at #272) if no lanes of $46 == 0x00000000 (0.0)
  284. label                          label 0x00000020
  285. copy_4_slots_unmasked          $46..49 = result₃
  286. copy_constant                  $50 = 0x41100000 (9.0)
  287. copy_constant                  $51 = 0x40400000 (3.0)
  288. copy_constant                  $52 = 0x40000000 (2.0)
  289. copy_constant                  $53 = 0x3F800000 (1.0)
  290. cmpeq_4_floats                 $46..49 = equal($46..49, $50..53)
  291. bitwise_and_2_ints             $46..47 &= $48..49
  292. bitwise_and_int                $46 &= $47
  293. label                          label 0x0000001F
  294. copy_slot_masked               $45 = Mask($46)
  295. label                          label 0x00000003
  296. load_condition_mask            CondMask = $54
  297. zero_slot_unmasked             $25 = 0
  298. merge_condition_mask           CondMask = $44 & $45
  299. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (label 2 at #319)
  300. copy_constant                  $26 = 0x41100000 (9.0)
  301. swizzle_4                      $26..29 = ($26..29).xxxx
  302. copy_4_slots_unmasked          result₄ = $26..29
  303. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 35 at #308)
  304. copy_constant                  i₈ = 0x3F800000 (1.0)
  305. label                          label 0x00000024
  306. copy_4_slots_unmasked          $26..29 = result₄(1..3), i₈
  307. copy_4_slots_masked            result₄ = Mask($26..29)
  308. label                          label 0x00000023
  309. copy_4_slots_unmasked          $26..29 = result₄
  310. copy_constant                  $30 = 0x41100000 (9.0)
  311. copy_constant                  $31 = 0x41100000 (9.0)
  312. copy_constant                  $32 = 0x41100000 (9.0)
  313. copy_constant                  $33 = 0x3F800000 (1.0)
  314. cmpeq_4_floats                 $26..29 = equal($26..29, $30..33)
  315. bitwise_and_2_ints             $26..27 &= $28..29
  316. bitwise_and_int                $26 &= $27
  317. label                          label 0x00000022
  318. copy_slot_masked               $25 = Mask($26)
  319. label                          label 0x00000002
  320. load_condition_mask            CondMask = $44
  321. zero_slot_unmasked             $0 = 0
  322. merge_condition_mask           CondMask = $24 & $25
  323. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 1 at #351)
  324. copy_constant                  $1 = 0x41100000 (9.0)
  325. swizzle_4                      $1..4 = ($1..4).xxxx
  326. copy_4_slots_unmasked          result₅ = $1..4
  327. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 38 at #340)
  328. copy_constant                  i₉ = 0x3F800000 (1.0)
  329. label                          label 0x00000027
  330. copy_4_slots_unmasked          $1..4 = result₅(1..3), i₉
  331. copy_4_slots_masked            result₅ = Mask($1..4)
  332. copy_slot_unmasked             $1 = i₉
  333. copy_constant                  $2 = 0x3F800000 (1.0)
  334. add_float                      $1 += $2
  335. copy_slot_masked               i₉ = Mask($1)
  336. copy_constant                  $2 = 0x40800000 (4.0)
  337. cmpne_float                    $1 = notEqual($1, $2)
  338. stack_rewind
  339. branch_if_no_active_lanes_eq   branch -10 (label 39 at #329) if no lanes of $1 == 0x00000000 (0.0)
  340. label                          label 0x00000026
  341. copy_4_slots_unmasked          $1..4 = result₅
  342. copy_constant                  $5 = 0x41100000 (9.0)
  343. copy_constant                  $6 = 0x3F800000 (1.0)
  344. copy_constant                  $7 = 0x40000000 (2.0)
  345. copy_constant                  $8 = 0x40400000 (3.0)
  346. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  347. bitwise_and_2_ints             $1..2 &= $3..4
  348. bitwise_and_int                $1 &= $2
  349. label                          label 0x00000025
  350. copy_slot_masked               $0 = Mask($1)
  351. label                          label 0x00000001
  352. load_condition_mask            CondMask = $24
  353. swizzle_4                      $0..3 = ($0..3).xxxx
  354. copy_4_constants               $4..7 = colorRed
  355. copy_4_constants               $8..11 = colorGreen
  356. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  357. load_src                       src.rgba = $0..3
