    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x0000000A (1.401298e-44)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. cast_to_int_from_float         $0 = FloatToInt($0)
   11. copy_constant                  $1 = 0x00000005 (7.006492e-45)
   12. mul_int                        $0 *= $1
   13. copy_slot_unmasked             five = $0
   14. store_condition_mask           $18 = CondMask
   15. store_condition_mask           $38 = CondMask
   16. store_condition_mask           $48 = CondMask
   17. store_condition_mask           $28 = CondMask
   18. store_condition_mask           $70 = CondMask
   19. store_condition_mask           $58 = CondMask
   20. store_condition_mask           $12 = CondMask
   21. store_condition_mask           $64 = CondMask
   22. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (label 9 at #54)
   23. store_return_mask              $65 = RetMask
   24. copy_slot_unmasked             five₁ = five
   25. copy_slot_unmasked             i = kZero
   26. store_loop_mask                $66 = LoopMask
   27. jump                           jump +15 (label 10 at #42)
   28. label                          label 0x0000000B
   29. store_condition_mask           $67 = CondMask
   30. copy_slot_unmasked             $68 = i
   31. copy_slot_unmasked             $69 = five₁
   32. cmpeq_int                      $68 = equal($68, $69)
   33. merge_condition_mask           CondMask = $67 & $68
   34. copy_slot_unmasked             $69 = i
   35. copy_slot_masked               [return_loop].result = Mask($69)
   36. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   37. load_condition_mask            CondMask = $67
   38. copy_slot_unmasked             $67 = i
   39. copy_constant                  $68 = 0x00000001 (1.401298e-45)
   40. add_int                        $67 += $68
   41. copy_slot_masked               i = Mask($67)
   42. label                          label 0x0000000A
   43. copy_slot_unmasked             $67 = i
   44. copy_constant                  $68 = 0x0000000A (1.401298e-44)
   45. cmplt_int                      $67 = lessThan($67, $68)
   46. merge_loop_mask                LoopMask &= $67
   47. stack_rewind
   48. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 11 at #28)
   49. load_loop_mask                 LoopMask = $66
   50. zero_slot_unmasked             $66 = 0
   51. copy_slot_masked               [return_loop].result = Mask($66)
   52. load_return_mask               RetMask = $65
   53. copy_slot_unmasked             $65 = [return_loop].result
   54. label                          label 0x00000009
   55. copy_constant                  $66 = 0x00000005 (7.006492e-45)
   56. cmpeq_int                      $65 = equal($65, $66)
   57. zero_slot_unmasked             $13 = 0
   58. merge_condition_mask           CondMask = $64 & $65
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +37 (label 8 at #96)
   60. copy_slot_unmasked             five₂ = five
   61. zero_2_slots_unmasked          sum, i₁ = 0
   62. store_loop_mask                $14 = LoopMask
   63. jump                           jump +20 (label 13 at #83)
   64. label                          label 0x0000000E
   65. zero_slot_unmasked             [temporary 0] = 0
   66. store_condition_mask           $15 = CondMask
   67. copy_slot_unmasked             $16 = i₁
   68. copy_slot_unmasked             $17 = five₂
   69. cmplt_int                      $16 = lessThan($16, $17)
   70. merge_condition_mask           CondMask = $15 & $16
   71. copy_constant                  $17 = 0xFFFFFFFF
   72. copy_slot_masked               [temporary 0] = Mask($17)
   73. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   74. load_condition_mask            CondMask = $15
   75. copy_2_slots_unmasked          $15..16 = sum, i₁
   76. add_int                        $15 += $16
   77. copy_slot_masked               sum = Mask($15)
   78. reenable_loop_mask             LoopMask |= [temporary 0]
   79. copy_slot_unmasked             $15 = i₁
   80. copy_constant                  $16 = 0x00000001 (1.401298e-45)
   81. add_int                        $15 += $16
   82. copy_slot_masked               i₁ = Mask($15)
   83. label                          label 0x0000000D
   84. copy_slot_unmasked             $15 = i₁
   85. copy_slot_unmasked             $16 = kTen
   86. cmplt_int                      $15 = lessThan($15, $16)
   87. merge_loop_mask                LoopMask &= $15
   88. stack_rewind
   89. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 14 at #64)
   90. load_loop_mask                 LoopMask = $14
   91. copy_slot_unmasked             $14 = sum
   92. label                          label 0x0000000C
   93. copy_constant                  $15 = 0x00000023 (4.904545e-44)
   94. cmpeq_int                      $14 = equal($14, $15)
   95. copy_slot_masked               $13 = Mask($14)
   96. label                          label 0x00000008
   97. load_condition_mask            CondMask = $64
   98. zero_slot_unmasked             $59 = 0
   99. merge_condition_mask           CondMask = $12 & $13
  100. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (label 7 at #136)
  101. copy_constant                  five₃ = 0x00000005 (7.006492e-45)
  102. zero_slot_unmasked             sum₁ = 0
  103. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  104. zero_slot_unmasked             i₂ = 0
  105. store_loop_mask                $60 = LoopMask
  106. jump                           jump +17 (label 16 at #123)
  107. label                          label 0x00000011
  108. store_condition_mask           $61 = CondMask
  109. copy_slot_unmasked             $62 = five₃
  110. copy_slot_unmasked             $63 = i₂
  111. cmplt_int                      $62 = lessThan($62, $63)
  112. merge_condition_mask           CondMask = $61 & $62
  113. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  114. load_condition_mask            CondMask = $61
  115. copy_slot_unmasked             $61 = sum₁
  116. copy_slot_unmasked             $62 = i₂
  117. add_int                        $61 += $62
  118. copy_slot_masked               sum₁ = Mask($61)
  119. copy_slot_unmasked             $61 = i₂
  120. copy_slot_unmasked             $62 = kOne
  121. add_int                        $61 += $62
  122. copy_slot_masked               i₂ = Mask($61)
  123. label                          label 0x00000010
  124. copy_slot_unmasked             $61 = i₂
  125. copy_constant                  $62 = 0x0000000A (1.401298e-44)
  126. cmplt_int                      $61 = lessThan($61, $62)
  127. merge_loop_mask                LoopMask &= $61
  128. stack_rewind
  129. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 17 at #107)
  130. load_loop_mask                 LoopMask = $60
  131. copy_slot_unmasked             $60 = sum₁
  132. label                          label 0x0000000F
  133. copy_constant                  $61 = 0x0000000F (2.101948e-44)
  134. cmpeq_int                      $60 = equal($60, $61)
  135. copy_slot_masked               $59 = Mask($60)
  136. label                          label 0x00000007
  137. load_condition_mask            CondMask = $12
  138. zero_slot_unmasked             $71 = 0
  139. merge_condition_mask           CondMask = $58 & $59
  140. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 6 at #168)
  141. copy_constant                  $72 = 0x00000009 (1.261169e-44)
  142. swizzle_4                      $72..75 = ($72..75).xxxx
  143. copy_4_slots_unmasked          result = $72..75
  144. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 19 at #157)
  145. copy_constant                  i₃ = 0x00000001 (1.401298e-45)
  146. label                          label 0x00000014
  147. copy_4_slots_unmasked          $72..75 = result(1..3), i₃
  148. copy_4_slots_masked            result = Mask($72..75)
  149. copy_slot_unmasked             $72 = i₃
  150. copy_constant                  $73 = 0x00000001 (1.401298e-45)
  151. add_int                        $72 += $73
  152. copy_slot_masked               i₃ = Mask($72)
  153. copy_constant                  $73 = 0x00000003 (4.203895e-45)
  154. cmple_int                      $72 = lessThanEqual($72, $73)
  155. stack_rewind
  156. branch_if_no_active_lanes_eq   branch -10 (label 20 at #146) if no lanes of $72 == 0x00000000 (0.0)
  157. label                          label 0x00000013
  158. copy_4_slots_unmasked          $72..75 = result
  159. copy_constant                  $76 = 0x00000009 (1.261169e-44)
  160. copy_constant                  $77 = 0x00000001 (1.401298e-45)
  161. copy_constant                  $78 = 0x00000002 (2.802597e-45)
  162. copy_constant                  $79 = 0x00000003 (4.203895e-45)
  163. cmpeq_4_ints                   $72..75 = equal($72..75, $76..79)
  164. bitwise_and_2_ints             $72..73 &= $74..75
  165. bitwise_and_int                $72 &= $73
  166. label                          label 0x00000012
  167. copy_slot_masked               $71 = Mask($72)
  168. label                          label 0x00000006
  169. load_condition_mask            CondMask = $58
  170. zero_slot_unmasked             $29 = 0
  171. merge_condition_mask           CondMask = $70 & $71
  172. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 5 at #200)
  173. copy_constant                  $30 = 0x00000009 (1.261169e-44)
  174. swizzle_4                      $30..33 = ($30..33).xxxx
  175. copy_4_slots_unmasked          result₁ = $30..33
  176. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 22 at #189)
  177. copy_constant                  i₄ = 0x00000001 (1.401298e-45)
  178. label                          label 0x00000017
  179. copy_4_slots_unmasked          $30..33 = result₁(1..3), i₄
  180. copy_4_slots_masked            result₁ = Mask($30..33)
  181. copy_slot_unmasked             $30 = i₄
  182. copy_constant                  $31 = 0x00000001 (1.401298e-45)
  183. add_int                        $30 += $31
  184. copy_slot_masked               i₄ = Mask($30)
  185. copy_constant                  $31 = 0x00000004 (5.605194e-45)
  186. cmplt_int                      $30 = lessThan($30, $31)
  187. stack_rewind
  188. branch_if_no_active_lanes_eq   branch -10 (label 23 at #178) if no lanes of $30 == 0x00000000 (0.0)
  189. label                          label 0x00000016
  190. copy_4_slots_unmasked          $30..33 = result₁
  191. copy_constant                  $34 = 0x00000009 (1.261169e-44)
  192. copy_constant                  $35 = 0x00000001 (1.401298e-45)
  193. copy_constant                  $36 = 0x00000002 (2.802597e-45)
  194. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  195. cmpeq_4_ints                   $30..33 = equal($30..33, $34..37)
  196. bitwise_and_2_ints             $30..31 &= $32..33
  197. bitwise_and_int                $30 &= $31
  198. label                          label 0x00000015
  199. copy_slot_masked               $29 = Mask($30)
  200. label                          label 0x00000005
  201. load_condition_mask            CondMask = $70
  202. zero_slot_unmasked             $49 = 0
  203. merge_condition_mask           CondMask = $28 & $29
  204. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 4 at #233)
  205. copy_constant                  $50 = 0x00000009 (1.261169e-44)
  206. swizzle_4                      $50..53 = ($50..53).xxxx
  207. copy_4_slots_unmasked          result₂ = $50..53
  208. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 25 at #222)
  209. copy_constant                  i₅ = 0x00000003 (4.203895e-45)
  210. label                          label 0x0000001A
  211. copy_4_slots_unmasked          $50..53 = result₂(1..3), i₅
  212. copy_4_slots_masked            result₂ = Mask($50..53)
  213. copy_slot_unmasked             $50 = i₅
  214. copy_constant                  $51 = 0x00000001 (1.401298e-45)
  215. sub_int                        $50 -= $51
  216. copy_slot_masked               i₅ = Mask($50)
  217. copy_constant                  $50 = 0x00000001 (1.401298e-45)
  218. copy_slot_unmasked             $51 = i₅
  219. cmple_int                      $50 = lessThanEqual($50, $51)
  220. stack_rewind
  221. branch_if_no_active_lanes_eq   branch -11 (label 26 at #210) if no lanes of $50 == 0x00000000 (0.0)
  222. label                          label 0x00000019
  223. copy_4_slots_unmasked          $50..53 = result₂
  224. copy_constant                  $54 = 0x00000009 (1.261169e-44)
  225. copy_constant                  $55 = 0x00000003 (4.203895e-45)
  226. copy_constant                  $56 = 0x00000002 (2.802597e-45)
  227. copy_constant                  $57 = 0x00000001 (1.401298e-45)
  228. cmpeq_4_ints                   $50..53 = equal($50..53, $54..57)
  229. bitwise_and_2_ints             $50..51 &= $52..53
  230. bitwise_and_int                $50 &= $51
  231. label                          label 0x00000018
  232. copy_slot_masked               $49 = Mask($50)
  233. label                          label 0x00000004
  234. load_condition_mask            CondMask = $28
  235. zero_slot_unmasked             $39 = 0
  236. merge_condition_mask           CondMask = $48 & $49
  237. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 3 at #266)
  238. copy_constant                  $40 = 0x00000009 (1.261169e-44)
  239. swizzle_4                      $40..43 = ($40..43).xxxx
  240. copy_4_slots_unmasked          result₃ = $40..43
  241. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 28 at #255)
  242. copy_constant                  i₆ = 0x00000003 (4.203895e-45)
  243. label                          label 0x0000001D
  244. copy_4_slots_unmasked          $40..43 = result₃(1..3), i₆
  245. copy_4_slots_masked            result₃ = Mask($40..43)
  246. copy_slot_unmasked             $40 = i₆
  247. copy_constant                  $41 = 0x00000001 (1.401298e-45)
  248. sub_int                        $40 -= $41
  249. copy_slot_masked               i₆ = Mask($40)
  250. zero_slot_unmasked             $40 = 0
  251. copy_slot_unmasked             $41 = i₆
  252. cmplt_int                      $40 = lessThan($40, $41)
  253. stack_rewind
  254. branch_if_no_active_lanes_eq   branch -11 (label 29 at #243) if no lanes of $40 == 0x00000000 (0.0)
  255. label                          label 0x0000001C
  256. copy_4_slots_unmasked          $40..43 = result₃
  257. copy_constant                  $44 = 0x00000009 (1.261169e-44)
  258. copy_constant                  $45 = 0x00000003 (4.203895e-45)
  259. copy_constant                  $46 = 0x00000002 (2.802597e-45)
  260. copy_constant                  $47 = 0x00000001 (1.401298e-45)
  261. cmpeq_4_ints                   $40..43 = equal($40..43, $44..47)
  262. bitwise_and_2_ints             $40..41 &= $42..43
  263. bitwise_and_int                $40 &= $41
  264. label                          label 0x0000001B
  265. copy_slot_masked               $39 = Mask($40)
  266. label                          label 0x00000003
  267. load_condition_mask            CondMask = $48
  268. zero_slot_unmasked             $19 = 0
  269. merge_condition_mask           CondMask = $38 & $39
  270. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (label 2 at #290)
  271. copy_constant                  $20 = 0x00000009 (1.261169e-44)
  272. swizzle_4                      $20..23 = ($20..23).xxxx
  273. copy_4_slots_unmasked          result₄ = $20..23
  274. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 31 at #279)
  275. copy_constant                  i₇ = 0x00000001 (1.401298e-45)
  276. label                          label 0x00000020
  277. copy_4_slots_unmasked          $20..23 = result₄(1..3), i₇
  278. copy_4_slots_masked            result₄ = Mask($20..23)
  279. label                          label 0x0000001F
  280. copy_4_slots_unmasked          $20..23 = result₄
  281. copy_constant                  $24 = 0x00000009 (1.261169e-44)
  282. copy_constant                  $25 = 0x00000009 (1.261169e-44)
  283. copy_constant                  $26 = 0x00000009 (1.261169e-44)
  284. copy_constant                  $27 = 0x00000001 (1.401298e-45)
  285. cmpeq_4_ints                   $20..23 = equal($20..23, $24..27)
  286. bitwise_and_2_ints             $20..21 &= $22..23
  287. bitwise_and_int                $20 &= $21
  288. label                          label 0x0000001E
  289. copy_slot_masked               $19 = Mask($20)
  290. label                          label 0x00000002
  291. load_condition_mask            CondMask = $38
  292. zero_slot_unmasked             $0 = 0
  293. merge_condition_mask           CondMask = $18 & $19
  294. branch_if_no_active_lanes      branch_if_no_active_lanes +28 (label 1 at #322)
  295. copy_constant                  $1 = 0x00000009 (1.261169e-44)
  296. swizzle_4                      $1..4 = ($1..4).xxxx
  297. copy_4_slots_unmasked          result₅ = $1..4
  298. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 34 at #311)
  299. copy_constant                  i₈ = 0x00000001 (1.401298e-45)
  300. label                          label 0x00000023
  301. copy_4_slots_unmasked          $1..4 = result₅(1..3), i₈
  302. copy_4_slots_masked            result₅ = Mask($1..4)
  303. copy_slot_unmasked             $1 = i₈
  304. copy_constant                  $2 = 0x00000001 (1.401298e-45)
  305. add_int                        $1 += $2
  306. copy_slot_masked               i₈ = Mask($1)
  307. copy_constant                  $2 = 0x00000004 (5.605194e-45)
  308. cmpne_int                      $1 = notEqual($1, $2)
  309. stack_rewind
  310. branch_if_no_active_lanes_eq   branch -10 (label 35 at #300) if no lanes of $1 == 0x00000000 (0.0)
  311. label                          label 0x00000022
  312. copy_4_slots_unmasked          $1..4 = result₅
  313. copy_constant                  $5 = 0x00000009 (1.261169e-44)
  314. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  315. copy_constant                  $7 = 0x00000002 (2.802597e-45)
  316. copy_constant                  $8 = 0x00000003 (4.203895e-45)
  317. cmpeq_4_ints                   $1..4 = equal($1..4, $5..8)
  318. bitwise_and_2_ints             $1..2 &= $3..4
  319. bitwise_and_int                $1 &= $2
  320. label                          label 0x00000021
  321. copy_slot_masked               $0 = Mask($1)
  322. label                          label 0x00000001
  323. load_condition_mask            CondMask = $18
  324. swizzle_4                      $0..3 = ($0..3).xxxx
  325. copy_4_constants               $4..7 = colorRed
  326. copy_4_constants               $8..11 = colorGreen
  327. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  328. load_src                       src.rgba = $0..3
