    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  _0_ok = 0xFFFFFFFF
    4. copy_slot_unmasked             $0 = _0_ok
    5. zero_slot_unmasked             $1 = 0
    6. copy_constant                  $2 = unknownInput
    7. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
    8. zero_slot_unmasked             $10 = 0
    9. copy_constant                  $11 = 0x3F800000 (1.0)
   10. swizzle_4                      $10..13 = ($10..13).yxxy
   11. zero_slot_unmasked             $14 = 0
   12. copy_constant                  $15 = 0x3F800000 (1.0)
   13. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
   14. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
   15. bitwise_and_4_ints             $2..5 &= $6..9
   16. bitwise_and_2_ints             $2..3 &= $4..5
   17. bitwise_and_int                $2 &= $3
   18. bitwise_and_int                $1 &= $2
   19. bitwise_and_int                $0 &= $1
   20. copy_slot_unmasked             _0_ok = $0
   21. copy_constant                  $1 = 0x41100000 (9.0)
   22. zero_3_slots_unmasked          $2..4 = 0
   23. copy_constant                  $5 = 0x41100000 (9.0)
   24. zero_3_slots_unmasked          $6..8 = 0
   25. copy_constant                  $9 = unknownInput
   26. zero_slot_unmasked             $10 = 0
   27. copy_constant                  $11 = 0x41100000 (9.0)
   28. swizzle_4                      $10..13 = ($10..13).yxxy
   29. zero_slot_unmasked             $14 = 0
   30. copy_constant                  $15 = 0x3F800000 (1.0)
   31. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
   32. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
   33. bitwise_and_4_ints             $2..5 &= $6..9
   34. bitwise_and_2_ints             $2..3 &= $4..5
   35. bitwise_and_int                $2 &= $3
   36. bitwise_and_int                $1 &= $2
   37. bitwise_and_int                $0 &= $1
   38. copy_slot_unmasked             _0_ok = $0
   39. copy_4_constants               $1..4 = testMatrix2x2
   40. copy_constant                  $5 = 0x3F800000 (1.0)
   41. copy_constant                  $6 = 0x40000000 (2.0)
   42. copy_constant                  $7 = 0x40400000 (3.0)
   43. copy_constant                  $8 = 0x40800000 (4.0)
   44. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   45. bitwise_and_2_ints             $1..2 &= $3..4
   46. bitwise_and_int                $1 &= $2
   47. bitwise_and_int                $0 &= $1
   48. copy_slot_unmasked             _0_ok = $0
   49. copy_4_constants               $24..27 = testMatrix2x2
   50. zero_slot_unmasked             $28 = 0
   51. copy_constant                  $29 = 0x3F800000 (1.0)
   52. shuffle                        $26..32 = ($26..32)[2 0 1 2 2 2 3]
   53. zero_slot_unmasked             $33 = 0
   54. copy_constant                  $34 = 0x3F800000 (1.0)
   55. shuffle                        $27..39 = ($27..39)[6 0 1 2 6 3 4 5 6 6 6 6 7]
   56. copy_4_slots_unmasked          $1..4 = $24..27
   57. copy_constant                  $5 = 0x3F800000 (1.0)
   58. copy_constant                  $6 = 0x40000000 (2.0)
   59. zero_2_slots_unmasked          $7..8 = 0
   60. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   61. bitwise_and_2_ints             $1..2 &= $3..4
   62. bitwise_and_int                $1 &= $2
   63. bitwise_and_int                $0 &= $1
   64. copy_slot_unmasked             _0_ok = $0
   65. copy_4_constants               $24..27 = testMatrix2x2
   66. zero_slot_unmasked             $28 = 0
   67. copy_constant                  $29 = 0x3F800000 (1.0)
   68. shuffle                        $26..32 = ($26..32)[2 0 1 2 2 2 3]
   69. zero_slot_unmasked             $33 = 0
   70. copy_constant                  $34 = 0x3F800000 (1.0)
   71. shuffle                        $27..39 = ($27..39)[6 0 1 2 6 3 4 5 6 6 6 6 7]
   72. copy_4_slots_unmasked          $1..4 = $28..31
   73. copy_constant                  $5 = 0x40400000 (3.0)
   74. copy_constant                  $6 = 0x40800000 (4.0)
   75. zero_2_slots_unmasked          $7..8 = 0
   76. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   77. bitwise_and_2_ints             $1..2 &= $3..4
   78. bitwise_and_int                $1 &= $2
   79. bitwise_and_int                $0 &= $1
   80. copy_slot_unmasked             _0_ok = $0
   81. store_condition_mask           $24 = CondMask
   82. store_condition_mask           $43 = CondMask
   83. store_condition_mask           $46 = CondMask
   84. store_condition_mask           $40 = CondMask
   85. store_condition_mask           $55 = CondMask
   86. store_condition_mask           $49 = CondMask
   87. store_condition_mask           $21 = CondMask
   88. store_condition_mask           $52 = CondMask
   89. store_condition_mask           $19 = CondMask
   90. copy_slot_unmasked             $20 = _0_ok
   91. zero_slot_unmasked             $53 = 0
   92. merge_condition_mask           CondMask = $19 & $20
   93. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 0 at #99)
   94. copy_constant                  ok = 0xFFFFFFFF
   95. copy_slot_unmasked             $54 = ok
   96. copy_slot_masked               [test_matrix_op_scalar_float].result = Mask($54)
   97. label                          label 0x00000001
   98. copy_slot_masked               $53 = Mask($54)
   99. label                          label 0x00000000
  100. load_condition_mask            CondMask = $19
  101. zero_slot_unmasked             $22 = 0
  102. merge_condition_mask           CondMask = $52 & $53
  103. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 2 at #109)
  104. copy_constant                  ok₁ = 0xFFFFFFFF
  105. copy_slot_unmasked             $23 = ok₁
  106. copy_slot_masked               [test_matrix_op_scalar_half].result = Mask($23)
  107. label                          label 0x00000003
  108. copy_slot_masked               $22 = Mask($23)
  109. label                          label 0x00000002
  110. load_condition_mask            CondMask = $52
  111. zero_slot_unmasked             $50 = 0
  112. merge_condition_mask           CondMask = $21 & $22
  113. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 4 at #119)
  114. copy_constant                  ok₂ = 0xFFFFFFFF
  115. copy_slot_unmasked             $51 = ok₂
  116. copy_slot_masked               [test_matrix_op_matrix_float].result = Mask($51)
  117. label                          label 0x00000005
  118. copy_slot_masked               $50 = Mask($51)
  119. label                          label 0x00000004
  120. load_condition_mask            CondMask = $21
  121. zero_slot_unmasked             $56 = 0
  122. merge_condition_mask           CondMask = $49 & $50
  123. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 6 at #129)
  124. copy_constant                  ok₃ = 0xFFFFFFFF
  125. copy_slot_unmasked             $57 = ok₃
  126. copy_slot_masked               [test_matrix_op_matrix_half].result = Mask($57)
  127. label                          label 0x00000007
  128. copy_slot_masked               $56 = Mask($57)
  129. label                          label 0x00000006
  130. load_condition_mask            CondMask = $49
  131. zero_slot_unmasked             $41 = 0
  132. merge_condition_mask           CondMask = $55 & $56
  133. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 8 at #139)
  134. copy_constant                  ok₄ = 0xFFFFFFFF
  135. copy_slot_unmasked             $42 = ok₄
  136. copy_slot_masked               [test_vector_op_matrix_float].result = Mask($42)
  137. label                          label 0x00000009
  138. copy_slot_masked               $41 = Mask($42)
  139. label                          label 0x00000008
  140. load_condition_mask            CondMask = $55
  141. zero_slot_unmasked             $47 = 0
  142. merge_condition_mask           CondMask = $40 & $41
  143. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 10 at #149)
  144. copy_constant                  ok₅ = 0xFFFFFFFF
  145. copy_slot_unmasked             $48 = ok₅
  146. copy_slot_masked               [test_vector_op_matrix_half].result = Mask($48)
  147. label                          label 0x0000000B
  148. copy_slot_masked               $47 = Mask($48)
  149. label                          label 0x0000000A
  150. load_condition_mask            CondMask = $40
  151. zero_slot_unmasked             $44 = 0
  152. merge_condition_mask           CondMask = $46 & $47
  153. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 12 at #159)
  154. copy_constant                  ok₆ = 0xFFFFFFFF
  155. copy_slot_unmasked             $45 = ok₆
  156. copy_slot_masked               [test_matrix_op_vector_float].result = Mask($45)
  157. label                          label 0x0000000D
  158. copy_slot_masked               $44 = Mask($45)
  159. label                          label 0x0000000C
  160. load_condition_mask            CondMask = $46
  161. zero_slot_unmasked             $25 = 0
  162. merge_condition_mask           CondMask = $43 & $44
  163. branch_if_no_active_lanes      branch_if_no_active_lanes +6 (label 14 at #169)
  164. copy_constant                  ok₇ = 0xFFFFFFFF
  165. copy_slot_unmasked             $26 = ok₇
  166. copy_slot_masked               [test_matrix_op_vector_half].result = Mask($26)
  167. label                          label 0x0000000F
  168. copy_slot_masked               $25 = Mask($26)
  169. label                          label 0x0000000E
  170. load_condition_mask            CondMask = $43
  171. copy_4_constants               $0..3 = colorRed
  172. merge_condition_mask           CondMask = $24 & $25
  173. copy_4_constants               $4..7 = colorGreen
  174. copy_4_slots_masked            $0..3 = Mask($4..7)
  175. label                          label 0x00000010
  176. load_condition_mask            CondMask = $24
  177. copy_4_slots_unmasked          [main].result = $0..3
  178. load_src                       src.rgba = [main].result
