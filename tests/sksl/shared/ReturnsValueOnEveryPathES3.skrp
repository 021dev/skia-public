    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $26 = CondMask
    4. store_condition_mask           $40 = CondMask
    5. store_condition_mask           $49 = CondMask
    6. store_condition_mask           $34 = CondMask
    7. store_condition_mask           $69 = CondMask
    8. store_condition_mask           $58 = CondMask
    9. store_condition_mask           $22 = CondMask
   10. store_condition_mask           $65 = CondMask
   11. store_condition_mask           $17 = CondMask
   12. store_condition_mask           $0 = CondMask
   13. store_condition_mask           $76 = CondMask
   14. branch_if_no_lanes_active      branch_if_no_lanes_active +21 (label 12 at #35)
   15. store_return_mask              $77 = RetMask
   16. store_loop_mask                $78 = LoopMask
   17. jump                           jump +6 (label 14 at #23)
   18. label                          label 0x0000000F
   19. zero_slot_unmasked             $79 = 0
   20. copy_slot_masked               [inside_while_loop].result = Mask($79)
   21. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   22. label                          label 0x0000000D
   23. label                          label 0x0000000E
   24. copy_constant                  $79 = unknownInput
   25. copy_constant                  $80 = 0x42F60000 (123.0)
   26. cmpeq_float                    $79 = equal($79, $80)
   27. merge_loop_mask                LoopMask &= $79
   28. stack_rewind
   29. branch_if_any_lanes_active     branch_if_any_lanes_active -11 (label 15 at #18)
   30. load_loop_mask                 LoopMask = $78
   31. copy_constant                  $78 = 0xFFFFFFFF
   32. copy_slot_masked               [inside_while_loop].result = Mask($78)
   33. load_return_mask               RetMask = $77
   34. copy_slot_unmasked             $77 = [inside_while_loop].result
   35. label                          label 0x0000000C
   36. zero_slot_unmasked             $1 = 0
   37. merge_condition_mask           CondMask = $76 & $77
   38. branch_if_no_lanes_active      branch_if_no_lanes_active +17 (label 11 at #55)
   39. store_return_mask              $2 = RetMask
   40. store_loop_mask                $3 = LoopMask
   41. label                          label 0x00000012
   42. copy_constant                  $4 = 0xFFFFFFFF
   43. copy_slot_masked               [inside_infinite_do_loop].result = Mask($4)
   44. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   45. label                          label 0x00000011
   46. copy_constant                  $4 = 0xFFFFFFFF
   47. merge_loop_mask                LoopMask &= $4
   48. stack_rewind
   49. branch_if_any_lanes_active     branch_if_any_lanes_active -8 (label 18 at #41)
   50. load_loop_mask                 LoopMask = $3
   51. load_return_mask               RetMask = $2
   52. copy_slot_unmasked             $2 = [inside_infinite_do_loop].result
   53. label                          label 0x00000010
   54. copy_slot_masked               $1 = Mask($2)
   55. label                          label 0x0000000B
   56. load_condition_mask            CondMask = $76
   57. zero_slot_unmasked             $18 = 0
   58. merge_condition_mask           CondMask = $0 & $1
   59. branch_if_no_lanes_active      branch_if_no_lanes_active +19 (label 10 at #78)
   60. store_return_mask              $19 = RetMask
   61. store_loop_mask                $20 = LoopMask
   62. jump                           jump +6 (label 21 at #68)
   63. label                          label 0x00000016
   64. copy_constant                  $21 = 0xFFFFFFFF
   65. copy_slot_masked               [inside_infinite_while_loop].result = Mask($21)
   66. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   67. label                          label 0x00000014
   68. label                          label 0x00000015
   69. copy_constant                  $21 = 0xFFFFFFFF
   70. merge_loop_mask                LoopMask &= $21
   71. stack_rewind
   72. branch_if_any_lanes_active     branch_if_any_lanes_active -9 (label 22 at #63)
   73. load_loop_mask                 LoopMask = $20
   74. load_return_mask               RetMask = $19
   75. copy_slot_unmasked             $19 = [inside_infinite_while_loop].result
   76. label                          label 0x00000013
   77. copy_slot_masked               $18 = Mask($19)
   78. label                          label 0x0000000A
   79. load_condition_mask            CondMask = $0
   80. zero_slot_unmasked             $66 = 0
   81. merge_condition_mask           CondMask = $17 & $18
   82. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 9 at #95)
   83. store_loop_mask                $67 = LoopMask
   84. label                          label 0x00000019
   85. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   86. label                          label 0x00000018
   87. copy_constant                  $68 = 0xFFFFFFFF
   88. merge_loop_mask                LoopMask &= $68
   89. stack_rewind
   90. branch_if_any_lanes_active     branch_if_any_lanes_active -6 (label 25 at #84)
   91. load_loop_mask                 LoopMask = $67
   92. copy_constant                  $67 = 0xFFFFFFFF
   93. label                          label 0x00000017
   94. copy_slot_masked               $66 = Mask($67)
   95. label                          label 0x00000009
   96. load_condition_mask            CondMask = $17
   97. zero_slot_unmasked             $23 = 0
   98. merge_condition_mask           CondMask = $65 & $66
   99. branch_if_no_lanes_active      branch_if_no_lanes_active +15 (label 8 at #114)
  100. store_loop_mask                $24 = LoopMask
  101. jump                           jump +4 (label 28 at #105)
  102. label                          label 0x0000001D
  103. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  104. label                          label 0x0000001B
  105. label                          label 0x0000001C
  106. copy_constant                  $25 = 0xFFFFFFFF
  107. merge_loop_mask                LoopMask &= $25
  108. stack_rewind
  109. branch_if_any_lanes_active     branch_if_any_lanes_active -7 (label 29 at #102)
  110. load_loop_mask                 LoopMask = $24
  111. copy_constant                  $24 = 0xFFFFFFFF
  112. label                          label 0x0000001A
  113. copy_slot_masked               $23 = Mask($24)
  114. label                          label 0x00000008
  115. load_condition_mask            CondMask = $65
  116. zero_slot_unmasked             $59 = 0
  117. merge_condition_mask           CondMask = $22 & $23
  118. branch_if_no_lanes_active      branch_if_no_lanes_active +31 (label 7 at #149)
  119. store_return_mask              $60 = RetMask
  120. store_loop_mask                $61 = LoopMask
  121. copy_constant                  $62 = unknownInput
  122. cast_to_int_from_float         $62 = FloatToInt($62)
  123. store_loop_mask                $63 = LoopMask
  124. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  125. case_op                        if ($62 == 0x00000001) { LoopMask = true; $63 = false; }
  126. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 32 at #130)
  127. copy_constant                  $64 = 0xFFFFFFFF
  128. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  129. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  130. label                          label 0x00000020
  131. case_op                        if ($62 == 0x00000002) { LoopMask = true; $63 = false; }
  132. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 33 at #136)
  133. zero_slot_unmasked             $64 = 0
  134. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  135. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  136. label                          label 0x00000021
  137. reenable_loop_mask             LoopMask |= $63
  138. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 34 at #142)
  139. zero_slot_unmasked             $63 = 0
  140. copy_slot_masked               [switch_with_all_returns].result = Mask($63)
  141. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  142. label                          label 0x00000022
  143. label                          label 0x0000001F
  144. load_loop_mask                 LoopMask = $61
  145. load_return_mask               RetMask = $60
  146. copy_slot_unmasked             $60 = [switch_with_all_returns].result
  147. label                          label 0x0000001E
  148. copy_slot_masked               $59 = Mask($60)
  149. label                          label 0x00000007
  150. load_condition_mask            CondMask = $22
  151. zero_slot_unmasked             $70 = 0
  152. merge_condition_mask           CondMask = $58 & $59
  153. branch_if_no_lanes_active      branch_if_no_lanes_active +27 (label 6 at #180)
  154. store_return_mask              $71 = RetMask
  155. store_loop_mask                $72 = LoopMask
  156. copy_constant                  $73 = unknownInput
  157. cast_to_int_from_float         $73 = FloatToInt($73)
  158. store_loop_mask                $74 = LoopMask
  159. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  160. case_op                        if ($73 == 0x00000001) { LoopMask = true; $74 = false; }
  161. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 37 at #165)
  162. copy_constant                  $75 = 0xFFFFFFFF
  163. copy_slot_masked               [switch_fallthrough].result = Mask($75)
  164. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  165. label                          label 0x00000025
  166. case_op                        if ($73 == 0x00000002) { LoopMask = true; $74 = false; }
  167. label                          label 0x00000026
  168. reenable_loop_mask             LoopMask |= $74
  169. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 39 at #173)
  170. zero_slot_unmasked             $74 = 0
  171. copy_slot_masked               [switch_fallthrough].result = Mask($74)
  172. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  173. label                          label 0x00000027
  174. label                          label 0x00000024
  175. load_loop_mask                 LoopMask = $72
  176. load_return_mask               RetMask = $71
  177. copy_slot_unmasked             $71 = [switch_fallthrough].result
  178. label                          label 0x00000023
  179. copy_slot_masked               $70 = Mask($71)
  180. label                          label 0x00000006
  181. load_condition_mask            CondMask = $58
  182. zero_slot_unmasked             $35 = 0
  183. merge_condition_mask           CondMask = $69 & $70
  184. branch_if_no_lanes_active      branch_if_no_lanes_active +23 (label 5 at #207)
  185. store_return_mask              $36 = RetMask
  186. store_loop_mask                $37 = LoopMask
  187. copy_constant                  $38 = unknownInput
  188. cast_to_int_from_float         $38 = FloatToInt($38)
  189. store_loop_mask                $39 = LoopMask
  190. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  191. case_op                        if ($38 == 0x00000001) { LoopMask = true; $39 = false; }
  192. label                          label 0x0000002A
  193. case_op                        if ($38 == 0x00000002) { LoopMask = true; $39 = false; }
  194. label                          label 0x0000002B
  195. reenable_loop_mask             LoopMask |= $39
  196. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 44 at #200)
  197. copy_constant                  $39 = 0xFFFFFFFF
  198. copy_slot_masked               [switch_fallthrough_twice].result = Mask($39)
  199. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  200. label                          label 0x0000002C
  201. label                          label 0x00000029
  202. load_loop_mask                 LoopMask = $37
  203. load_return_mask               RetMask = $36
  204. copy_slot_unmasked             $36 = [switch_fallthrough_twice].result
  205. label                          label 0x00000028
  206. copy_slot_masked               $35 = Mask($36)
  207. label                          label 0x00000005
  208. load_condition_mask            CondMask = $69
  209. zero_slot_unmasked             $50 = 0
  210. merge_condition_mask           CondMask = $34 & $35
  211. branch_if_no_lanes_active      branch_if_no_lanes_active +40 (label 4 at #251)
  212. store_return_mask              $51 = RetMask
  213. store_loop_mask                $52 = LoopMask
  214. copy_constant                  $53 = unknownInput
  215. cast_to_int_from_float         $53 = FloatToInt($53)
  216. store_loop_mask                $54 = LoopMask
  217. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  218. case_op                        if ($53 == 0x00000001) { LoopMask = true; $54 = false; }
  219. branch_if_no_lanes_active      branch_if_no_lanes_active +19 (label 47 at #238)
  220. zero_slot_unmasked             x = 0
  221. store_loop_mask                $55 = LoopMask
  222. jump                           jump +8 (label 49 at #230)
  223. label                          label 0x00000032
  224. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  225. label                          label 0x00000030
  226. copy_slot_unmasked             $56 = x
  227. copy_constant                  $57 = 0x00000001 (1.401298e-45)
  228. add_int                        $56 += $57
  229. copy_slot_masked               x = Mask($56)
  230. label                          label 0x00000031
  231. copy_slot_unmasked             $56 = x
  232. copy_constant                  $57 = 0x0000000A (1.401298e-44)
  233. cmple_int                      $56 = lessThanEqual($56, $57)
  234. merge_loop_mask                LoopMask &= $56
  235. stack_rewind
  236. branch_if_any_lanes_active     branch_if_any_lanes_active -13 (label 50 at #223)
  237. load_loop_mask                 LoopMask = $55
  238. label                          label 0x0000002F
  239. reenable_loop_mask             LoopMask |= $54
  240. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 51 at #244)
  241. copy_constant                  $54 = 0xFFFFFFFF
  242. copy_slot_masked               [switch_with_break_in_loop].result = Mask($54)
  243. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  244. label                          label 0x00000033
  245. label                          label 0x0000002E
  246. load_loop_mask                 LoopMask = $52
  247. load_return_mask               RetMask = $51
  248. copy_slot_unmasked             $51 = [switch_with_break_in_loop].result
  249. label                          label 0x0000002D
  250. copy_slot_masked               $50 = Mask($51)
  251. label                          label 0x00000004
  252. load_condition_mask            CondMask = $34
  253. zero_slot_unmasked             $41 = 0
  254. merge_condition_mask           CondMask = $49 & $50
  255. branch_if_no_lanes_active      branch_if_no_lanes_active +44 (label 3 at #299)
  256. store_return_mask              $42 = RetMask
  257. store_loop_mask                $43 = LoopMask
  258. copy_constant                  $44 = unknownInput
  259. cast_to_int_from_float         $44 = FloatToInt($44)
  260. store_loop_mask                $45 = LoopMask
  261. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  262. case_op                        if ($44 == 0x00000001) { LoopMask = true; $45 = false; }
  263. branch_if_no_lanes_active      branch_if_no_lanes_active +23 (label 54 at #286)
  264. zero_slot_unmasked             x₁ = 0
  265. store_loop_mask                $46 = LoopMask
  266. jump                           jump +12 (label 56 at #278)
  267. label                          label 0x00000039
  268. zero_slot_unmasked             $34 = 0
  269. copy_constant                  $35 = 0xFFFFFFFF
  270. copy_slot_masked               $34 = Mask($35)
  271. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  272. reenable_loop_mask             LoopMask |= $34
  273. label                          label 0x00000037
  274. copy_slot_unmasked             $47 = x₁
  275. copy_constant                  $48 = 0x00000001 (1.401298e-45)
  276. add_int                        $47 += $48
  277. copy_slot_masked               x₁ = Mask($47)
  278. label                          label 0x00000038
  279. copy_slot_unmasked             $47 = x₁
  280. copy_constant                  $48 = 0x0000000A (1.401298e-44)
  281. cmple_int                      $47 = lessThanEqual($47, $48)
  282. merge_loop_mask                LoopMask &= $47
  283. stack_rewind
  284. branch_if_any_lanes_active     branch_if_any_lanes_active -17 (label 57 at #267)
  285. load_loop_mask                 LoopMask = $46
  286. label                          label 0x00000036
  287. reenable_loop_mask             LoopMask |= $45
  288. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 58 at #292)
  289. copy_constant                  $45 = 0xFFFFFFFF
  290. copy_slot_masked               [switch_with_continue_in_loop].result = Mask($45)
  291. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  292. label                          label 0x0000003A
  293. label                          label 0x00000035
  294. load_loop_mask                 LoopMask = $43
  295. load_return_mask               RetMask = $42
  296. copy_slot_unmasked             $42 = [switch_with_continue_in_loop].result
  297. label                          label 0x00000034
  298. copy_slot_masked               $41 = Mask($42)
  299. label                          label 0x00000003
  300. load_condition_mask            CondMask = $49
  301. zero_slot_unmasked             $27 = 0
  302. merge_condition_mask           CondMask = $40 & $41
  303. branch_if_no_lanes_active      branch_if_no_lanes_active +35 (label 2 at #338)
  304. store_return_mask              $28 = RetMask
  305. store_loop_mask                $29 = LoopMask
  306. copy_constant                  $30 = unknownInput
  307. cast_to_int_from_float         $30 = FloatToInt($30)
  308. store_loop_mask                $31 = LoopMask
  309. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  310. case_op                        if ($30 == 0x00000001) { LoopMask = true; $31 = false; }
  311. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 61 at #325)
  312. copy_constant                  $32 = unknownInput
  313. copy_constant                  $33 = 0x42F60000 (123.0)
  314. cmpeq_float                    $32 = equal($32, $33)
  315. branch_if_no_active_lanes_eq   branch +5 (label 62 at #320) if no lanes of $32 == 0xFFFFFFFF
  316. zero_slot_unmasked             $33 = 0
  317. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  318. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  319. jump                           jump +5 (label 63 at #324)
  320. label                          label 0x0000003E
  321. copy_constant                  $33 = 0xFFFFFFFF
  322. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  323. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  324. label                          label 0x0000003F
  325. label                          label 0x0000003D
  326. reenable_loop_mask             LoopMask |= $31
  327. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 64 at #331)
  328. copy_constant                  $31 = 0xFFFFFFFF
  329. copy_slot_masked               [switch_with_if_that_returns].result = Mask($31)
  330. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  331. label                          label 0x00000040
  332. label                          label 0x0000003C
  333. load_loop_mask                 LoopMask = $29
  334. load_return_mask               RetMask = $28
  335. copy_slot_unmasked             $28 = [switch_with_if_that_returns].result
  336. label                          label 0x0000003B
  337. copy_slot_masked               $27 = Mask($28)
  338. label                          label 0x00000002
  339. load_condition_mask            CondMask = $40
  340. zero_slot_unmasked             $5 = 0
  341. merge_condition_mask           CondMask = $26 & $27
  342. branch_if_no_lanes_active      branch_if_no_lanes_active +30 (label 1 at #372)
  343. store_return_mask              $6 = RetMask
  344. store_loop_mask                $7 = LoopMask
  345. copy_constant                  $8 = unknownInput
  346. cast_to_int_from_float         $8 = FloatToInt($8)
  347. store_loop_mask                $9 = LoopMask
  348. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  349. case_op                        if ($8 == 0x00000001) { LoopMask = true; $9 = false; }
  350. branch_if_no_lanes_active      branch_if_no_lanes_active +9 (label 67 at #359)
  351. copy_constant                  $10 = unknownInput
  352. copy_constant                  $11 = 0x42F60000 (123.0)
  353. cmpeq_float                    $10 = equal($10, $11)
  354. branch_if_no_active_lanes_eq   branch +4 (label 68 at #358) if no lanes of $10 == 0xFFFFFFFF
  355. zero_slot_unmasked             $11 = 0
  356. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($11)
  357. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  358. label                          label 0x00000044
  359. label                          label 0x00000043
  360. reenable_loop_mask             LoopMask |= $9
  361. branch_if_no_lanes_active      branch_if_no_lanes_active +4 (label 70 at #365)
  362. copy_constant                  $9 = 0xFFFFFFFF
  363. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($9)
  364. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  365. label                          label 0x00000046
  366. label                          label 0x00000042
  367. load_loop_mask                 LoopMask = $7
  368. load_return_mask               RetMask = $6
  369. copy_slot_unmasked             $6 = [switch_with_one_sided_if_then_fallthrough].result
  370. label                          label 0x00000041
  371. copy_slot_masked               $5 = Mask($6)
  372. label                          label 0x00000001
  373. load_condition_mask            CondMask = $26
  374. swizzle_4                      $5..8 = ($5..8).xxxx
  375. copy_4_constants               $9..12 = colorRed
  376. copy_4_constants               $13..16 = colorGreen
  377. mix_4_ints                     $5..8 = mix($9..12, $13..16, $5..8)
  378. load_src                       src.rgba = $5..8
