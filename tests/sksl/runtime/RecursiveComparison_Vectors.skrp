    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  $0 = colorGreen(1)
   34. copy_constant                  $1 = 0x42340000 (45.0)
   35. mul_float                      $0 *= $1
   36. copy_slot_unmasked             F45 = $0
   37. copy_constant                  $0 = 0xFFFFFFFF
   38. copy_slot_unmasked             EQ = $0
   39. zero_slot_unmasked             $0 = 0
   40. copy_slot_unmasked             NE = $0
   41. copy_constant                  $0 = colorGreen(0)
   42. copy_constant                  $1 = 0x3F800000 (1.0)
   43. add_float                      $0 += $1
   44. copy_slot_unmasked             _0_one = $0
   45. copy_slot_unmasked             $0 = F42
   46. copy_slot_unmasked             $1 = ZM
   47. copy_slot_unmasked             $2 = ZP
   48. copy_slot_unmasked             $3 = F43
   49. copy_4_slots_unmasked          _1_a = $0..3
   50. copy_slot_unmasked             $0 = F42
   51. copy_slot_unmasked             $1 = _0_one
   52. mul_float                      $0 *= $1
   53. copy_slot_unmasked             $1 = ZM
   54. copy_slot_unmasked             $2 = _0_one
   55. mul_float                      $1 *= $2
   56. copy_slot_unmasked             $2 = ZP
   57. copy_slot_unmasked             $3 = _0_one
   58. mul_float                      $2 *= $3
   59. copy_slot_unmasked             $3 = F43
   60. copy_slot_unmasked             $4 = _0_one
   61. mul_float                      $3 *= $4
   62. copy_4_slots_unmasked          _2_b = $0..3
   63. store_condition_mask           $21 = CondMask
   64. store_condition_mask           $43 = CondMask
   65. store_condition_mask           $54 = CondMask
   66. store_condition_mask           $32 = CondMask
   67. store_condition_mask           $86 = CondMask
   68. store_condition_mask           $65 = CondMask
   69. store_condition_mask           $10 = CondMask
   70. store_condition_mask           $76 = CondMask
   71. store_condition_mask           $8 = CondMask
   72. copy_slot_unmasked             $9 = EQ
   73. copy_4_slots_unmasked          $77..80 = _1_a
   74. copy_4_slots_unmasked          $81..84 = _2_b
   75. cmpne_4_floats                 $77..80 = notEqual($77..80, $81..84)
   76. bitwise_or_2_ints              $77..78 |= $79..80
   77. bitwise_or_int                 $77 |= $78
   78. merge_condition_mask           CondMask = $8 & $9
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#86)
   80. copy_4_slots_unmasked          $78..81 = _1_a
   81. copy_4_slots_unmasked          $82..85 = _2_b
   82. cmpeq_4_floats                 $78..81 = equal($78..81, $82..85)
   83. bitwise_and_2_ints             $78..79 &= $80..81
   84. bitwise_and_int                $78 &= $79
   85. copy_slot_masked               $77 = Mask($78)
   86. load_condition_mask            CondMask = $8
   87. zero_slot_unmasked             $11 = 0
   88. merge_condition_mask           CondMask = $76 & $77
   89. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#138)
   90. copy_slot_unmasked             $12 = NE
   91. copy_slot_unmasked             eq = $12
   92. copy_slot_unmasked             $12 = F42
   93. copy_slot_unmasked             f1 = $12
   94. copy_slot_unmasked             $12 = ZM
   95. copy_slot_unmasked             f2 = $12
   96. copy_slot_unmasked             $12 = ZP
   97. copy_slot_unmasked             f3 = $12
   98. copy_slot_unmasked             $12 = F43
   99. copy_slot_unmasked             f4 = $12
  100. copy_constant                  $12 = colorGreen(0)
  101. copy_constant                  $13 = 0x3F800000 (1.0)
  102. add_float                      $12 += $13
  103. copy_slot_unmasked             one = $12
  104. copy_4_slots_unmasked          $12..15 = f1(0..3)
  105. copy_4_slots_unmasked          a = $12..15
  106. copy_slot_unmasked             $12 = f1
  107. copy_slot_unmasked             $13 = one
  108. mul_float                      $12 *= $13
  109. copy_slot_unmasked             $13 = f2
  110. copy_slot_unmasked             $14 = one
  111. mul_float                      $13 *= $14
  112. copy_slot_unmasked             $14 = f3
  113. copy_slot_unmasked             $15 = one
  114. mul_float                      $14 *= $15
  115. copy_slot_unmasked             $15 = f4
  116. copy_slot_unmasked             $16 = one
  117. mul_float                      $15 *= $16
  118. copy_4_slots_unmasked          b = $12..15
  119. store_condition_mask           $78 = CondMask
  120. copy_slot_unmasked             $79 = eq
  121. copy_4_slots_unmasked          $12..15 = a
  122. copy_4_slots_unmasked          $16..19 = b
  123. cmpne_4_floats                 $12..15 = notEqual($12..15, $16..19)
  124. bitwise_or_2_ints              $12..13 |= $14..15
  125. bitwise_or_int                 $12 |= $13
  126. merge_condition_mask           CondMask = $78 & $79
  127. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#134)
  128. copy_4_slots_unmasked          $13..16 = a
  129. copy_4_slots_unmasked          $17..20 = b
  130. cmpeq_4_floats                 $13..16 = equal($13..16, $17..20)
  131. bitwise_and_2_ints             $13..14 &= $15..16
  132. bitwise_and_int                $13 &= $14
  133. copy_slot_masked               $12 = Mask($13)
  134. load_condition_mask            CondMask = $78
  135. copy_slot_masked               [test_same_vectors].result = Mask($12)
  136. bitwise_not_int                $12 = ~$12
  137. copy_slot_masked               $11 = Mask($12)
  138. load_condition_mask            CondMask = $76
  139. zero_slot_unmasked             $66 = 0
  140. merge_condition_mask           CondMask = $10 & $11
  141. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (#189)
  142. copy_slot_unmasked             $67 = NE
  143. copy_slot_unmasked             eq = $67
  144. copy_slot_unmasked             $67 = F42
  145. copy_slot_unmasked             f1 = $67
  146. copy_slot_unmasked             $67 = NAN1
  147. copy_slot_unmasked             f2 = $67
  148. copy_slot_unmasked             $67 = NAN2
  149. copy_slot_unmasked             f3 = $67
  150. copy_slot_unmasked             $67 = F43
  151. copy_slot_unmasked             f4 = $67
  152. copy_constant                  $67 = colorGreen(0)
  153. copy_constant                  $68 = 0x3F800000 (1.0)
  154. add_float                      $67 += $68
  155. copy_slot_unmasked             one = $67
  156. copy_4_slots_unmasked          $67..70 = f1(0..3)
  157. copy_4_slots_unmasked          a = $67..70
  158. copy_slot_unmasked             $67 = f1
  159. copy_slot_unmasked             $68 = one
  160. mul_float                      $67 *= $68
  161. copy_slot_unmasked             $68 = f2
  162. copy_slot_unmasked             $69 = one
  163. mul_float                      $68 *= $69
  164. copy_slot_unmasked             $69 = f3
  165. copy_slot_unmasked             $70 = one
  166. mul_float                      $69 *= $70
  167. copy_slot_unmasked             $70 = f4
  168. copy_slot_unmasked             $71 = one
  169. mul_float                      $70 *= $71
  170. copy_4_slots_unmasked          b = $67..70
  171. store_condition_mask           $12 = CondMask
  172. copy_slot_unmasked             $13 = eq
  173. copy_4_slots_unmasked          $67..70 = a
  174. copy_4_slots_unmasked          $71..74 = b
  175. cmpne_4_floats                 $67..70 = notEqual($67..70, $71..74)
  176. bitwise_or_2_ints              $67..68 |= $69..70
  177. bitwise_or_int                 $67 |= $68
  178. merge_condition_mask           CondMask = $12 & $13
  179. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#186)
  180. copy_4_slots_unmasked          $68..71 = a
  181. copy_4_slots_unmasked          $72..75 = b
  182. cmpeq_4_floats                 $68..71 = equal($68..71, $72..75)
  183. bitwise_and_2_ints             $68..69 &= $70..71
  184. bitwise_and_int                $68 &= $69
  185. copy_slot_masked               $67 = Mask($68)
  186. load_condition_mask            CondMask = $12
  187. copy_slot_masked               [test_same_vectors].result = Mask($67)
  188. copy_slot_masked               $66 = Mask($67)
  189. load_condition_mask            CondMask = $10
  190. zero_slot_unmasked             $87 = 0
  191. merge_condition_mask           CondMask = $65 & $66
  192. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#241)
  193. copy_slot_unmasked             $88 = EQ
  194. copy_slot_unmasked             eq = $88
  195. copy_slot_unmasked             $88 = F42
  196. copy_slot_unmasked             f1 = $88
  197. copy_slot_unmasked             $88 = NAN1
  198. copy_slot_unmasked             f2 = $88
  199. copy_slot_unmasked             $88 = NAN2
  200. copy_slot_unmasked             f3 = $88
  201. copy_slot_unmasked             $88 = F43
  202. copy_slot_unmasked             f4 = $88
  203. copy_constant                  $88 = colorGreen(0)
  204. copy_constant                  $89 = 0x3F800000 (1.0)
  205. add_float                      $88 += $89
  206. copy_slot_unmasked             one = $88
  207. copy_4_slots_unmasked          $88..91 = f1(0..3)
  208. copy_4_slots_unmasked          a = $88..91
  209. copy_slot_unmasked             $88 = f1
  210. copy_slot_unmasked             $89 = one
  211. mul_float                      $88 *= $89
  212. copy_slot_unmasked             $89 = f2
  213. copy_slot_unmasked             $90 = one
  214. mul_float                      $89 *= $90
  215. copy_slot_unmasked             $90 = f3
  216. copy_slot_unmasked             $91 = one
  217. mul_float                      $90 *= $91
  218. copy_slot_unmasked             $91 = f4
  219. copy_slot_unmasked             $92 = one
  220. mul_float                      $91 *= $92
  221. copy_4_slots_unmasked          b = $88..91
  222. store_condition_mask           $67 = CondMask
  223. copy_slot_unmasked             $68 = eq
  224. copy_4_slots_unmasked          $88..91 = a
  225. copy_4_slots_unmasked          $92..95 = b
  226. cmpne_4_floats                 $88..91 = notEqual($88..91, $92..95)
  227. bitwise_or_2_ints              $88..89 |= $90..91
  228. bitwise_or_int                 $88 |= $89
  229. merge_condition_mask           CondMask = $67 & $68
  230. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#237)
  231. copy_4_slots_unmasked          $89..92 = a
  232. copy_4_slots_unmasked          $93..96 = b
  233. cmpeq_4_floats                 $89..92 = equal($89..92, $93..96)
  234. bitwise_and_2_ints             $89..90 &= $91..92
  235. bitwise_and_int                $89 &= $90
  236. copy_slot_masked               $88 = Mask($89)
  237. load_condition_mask            CondMask = $67
  238. copy_slot_masked               [test_same_vectors].result = Mask($88)
  239. bitwise_not_int                $88 = ~$88
  240. copy_slot_masked               $87 = Mask($88)
  241. load_condition_mask            CondMask = $65
  242. zero_slot_unmasked             $33 = 0
  243. merge_condition_mask           CondMask = $86 & $87
  244. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (#292)
  245. copy_slot_unmasked             $34 = NE
  246. copy_slot_unmasked             eq = $34
  247. copy_slot_unmasked             $34 = F42
  248. copy_slot_unmasked             f1 = $34
  249. copy_slot_unmasked             $34 = F43
  250. copy_slot_unmasked             f2 = $34
  251. copy_slot_unmasked             $34 = F44
  252. copy_slot_unmasked             f3 = $34
  253. copy_slot_unmasked             $34 = F45
  254. copy_slot_unmasked             f4 = $34
  255. copy_constant                  $34 = colorGreen(0)
  256. copy_constant                  $35 = 0x40000000 (2.0)
  257. add_float                      $34 += $35
  258. copy_slot_unmasked             two = $34
  259. copy_4_slots_unmasked          $34..37 = f1(0..3)
  260. copy_4_slots_unmasked          a = $34..37
  261. copy_slot_unmasked             $34 = f1
  262. copy_slot_unmasked             $35 = two
  263. mul_float                      $34 *= $35
  264. copy_slot_unmasked             $35 = f2
  265. copy_slot_unmasked             $36 = two
  266. mul_float                      $35 *= $36
  267. copy_slot_unmasked             $36 = f3
  268. copy_slot_unmasked             $37 = two
  269. mul_float                      $36 *= $37
  270. copy_slot_unmasked             $37 = f4
  271. copy_slot_unmasked             $38 = two
  272. mul_float                      $37 *= $38
  273. copy_4_slots_unmasked          b = $34..37
  274. store_condition_mask           $88 = CondMask
  275. copy_slot_unmasked             $89 = eq
  276. copy_4_slots_unmasked          $34..37 = a
  277. copy_4_slots_unmasked          $38..41 = b
  278. cmpne_4_floats                 $34..37 = notEqual($34..37, $38..41)
  279. bitwise_or_2_ints              $34..35 |= $36..37
  280. bitwise_or_int                 $34 |= $35
  281. merge_condition_mask           CondMask = $88 & $89
  282. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#289)
  283. copy_4_slots_unmasked          $35..38 = a
  284. copy_4_slots_unmasked          $39..42 = b
  285. cmpeq_4_floats                 $35..38 = equal($35..38, $39..42)
  286. bitwise_and_2_ints             $35..36 &= $37..38
  287. bitwise_and_int                $35 &= $36
  288. copy_slot_masked               $34 = Mask($35)
  289. load_condition_mask            CondMask = $88
  290. copy_slot_masked               [test_diff_vectors].result = Mask($34)
  291. copy_slot_masked               $33 = Mask($34)
  292. load_condition_mask            CondMask = $86
  293. zero_slot_unmasked             $55 = 0
  294. merge_condition_mask           CondMask = $32 & $33
  295. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#344)
  296. copy_slot_unmasked             $56 = EQ
  297. copy_slot_unmasked             eq = $56
  298. copy_slot_unmasked             $56 = F42
  299. copy_slot_unmasked             f1 = $56
  300. copy_slot_unmasked             $56 = F43
  301. copy_slot_unmasked             f2 = $56
  302. copy_slot_unmasked             $56 = F44
  303. copy_slot_unmasked             f3 = $56
  304. copy_slot_unmasked             $56 = F45
  305. copy_slot_unmasked             f4 = $56
  306. copy_constant                  $56 = colorGreen(0)
  307. copy_constant                  $57 = 0x40000000 (2.0)
  308. add_float                      $56 += $57
  309. copy_slot_unmasked             two = $56
  310. copy_4_slots_unmasked          $56..59 = f1(0..3)
  311. copy_4_slots_unmasked          a = $56..59
  312. copy_slot_unmasked             $56 = f1
  313. copy_slot_unmasked             $57 = two
  314. mul_float                      $56 *= $57
  315. copy_slot_unmasked             $57 = f2
  316. copy_slot_unmasked             $58 = two
  317. mul_float                      $57 *= $58
  318. copy_slot_unmasked             $58 = f3
  319. copy_slot_unmasked             $59 = two
  320. mul_float                      $58 *= $59
  321. copy_slot_unmasked             $59 = f4
  322. copy_slot_unmasked             $60 = two
  323. mul_float                      $59 *= $60
  324. copy_4_slots_unmasked          b = $56..59
  325. store_condition_mask           $34 = CondMask
  326. copy_slot_unmasked             $35 = eq
  327. copy_4_slots_unmasked          $56..59 = a
  328. copy_4_slots_unmasked          $60..63 = b
  329. cmpne_4_floats                 $56..59 = notEqual($56..59, $60..63)
  330. bitwise_or_2_ints              $56..57 |= $58..59
  331. bitwise_or_int                 $56 |= $57
  332. merge_condition_mask           CondMask = $34 & $35
  333. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#340)
  334. copy_4_slots_unmasked          $57..60 = a
  335. copy_4_slots_unmasked          $61..64 = b
  336. cmpeq_4_floats                 $57..60 = equal($57..60, $61..64)
  337. bitwise_and_2_ints             $57..58 &= $59..60
  338. bitwise_and_int                $57 &= $58
  339. copy_slot_masked               $56 = Mask($57)
  340. load_condition_mask            CondMask = $34
  341. copy_slot_masked               [test_diff_vectors].result = Mask($56)
  342. bitwise_not_int                $56 = ~$56
  343. copy_slot_masked               $55 = Mask($56)
  344. load_condition_mask            CondMask = $32
  345. zero_slot_unmasked             $44 = 0
  346. merge_condition_mask           CondMask = $54 & $55
  347. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (#395)
  348. copy_slot_unmasked             $45 = NE
  349. copy_slot_unmasked             eq = $45
  350. copy_slot_unmasked             $45 = NAN1
  351. copy_slot_unmasked             f1 = $45
  352. copy_slot_unmasked             $45 = ZM
  353. copy_slot_unmasked             f2 = $45
  354. copy_slot_unmasked             $45 = ZP
  355. copy_slot_unmasked             f3 = $45
  356. copy_slot_unmasked             $45 = F42
  357. copy_slot_unmasked             f4 = $45
  358. copy_constant                  $45 = colorGreen(0)
  359. copy_constant                  $46 = 0x40000000 (2.0)
  360. add_float                      $45 += $46
  361. copy_slot_unmasked             two = $45
  362. copy_4_slots_unmasked          $45..48 = f1(0..3)
  363. copy_4_slots_unmasked          a = $45..48
  364. copy_slot_unmasked             $45 = f1
  365. copy_slot_unmasked             $46 = two
  366. mul_float                      $45 *= $46
  367. copy_slot_unmasked             $46 = f2
  368. copy_slot_unmasked             $47 = two
  369. mul_float                      $46 *= $47
  370. copy_slot_unmasked             $47 = f3
  371. copy_slot_unmasked             $48 = two
  372. mul_float                      $47 *= $48
  373. copy_slot_unmasked             $48 = f4
  374. copy_slot_unmasked             $49 = two
  375. mul_float                      $48 *= $49
  376. copy_4_slots_unmasked          b = $45..48
  377. store_condition_mask           $56 = CondMask
  378. copy_slot_unmasked             $57 = eq
  379. copy_4_slots_unmasked          $45..48 = a
  380. copy_4_slots_unmasked          $49..52 = b
  381. cmpne_4_floats                 $45..48 = notEqual($45..48, $49..52)
  382. bitwise_or_2_ints              $45..46 |= $47..48
  383. bitwise_or_int                 $45 |= $46
  384. merge_condition_mask           CondMask = $56 & $57
  385. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#392)
  386. copy_4_slots_unmasked          $46..49 = a
  387. copy_4_slots_unmasked          $50..53 = b
  388. cmpeq_4_floats                 $46..49 = equal($46..49, $50..53)
  389. bitwise_and_2_ints             $46..47 &= $48..49
  390. bitwise_and_int                $46 &= $47
  391. copy_slot_masked               $45 = Mask($46)
  392. load_condition_mask            CondMask = $56
  393. copy_slot_masked               [test_diff_vectors].result = Mask($45)
  394. copy_slot_masked               $44 = Mask($45)
  395. load_condition_mask            CondMask = $54
  396. zero_slot_unmasked             $22 = 0
  397. merge_condition_mask           CondMask = $43 & $44
  398. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (#447)
  399. copy_slot_unmasked             $23 = EQ
  400. copy_slot_unmasked             eq = $23
  401. copy_slot_unmasked             $23 = NAN1
  402. copy_slot_unmasked             f1 = $23
  403. copy_slot_unmasked             $23 = ZM
  404. copy_slot_unmasked             f2 = $23
  405. copy_slot_unmasked             $23 = ZP
  406. copy_slot_unmasked             f3 = $23
  407. copy_slot_unmasked             $23 = F42
  408. copy_slot_unmasked             f4 = $23
  409. copy_constant                  $23 = colorGreen(0)
  410. copy_constant                  $24 = 0x40000000 (2.0)
  411. add_float                      $23 += $24
  412. copy_slot_unmasked             two = $23
  413. copy_4_slots_unmasked          $23..26 = f1(0..3)
  414. copy_4_slots_unmasked          a = $23..26
  415. copy_slot_unmasked             $23 = f1
  416. copy_slot_unmasked             $24 = two
  417. mul_float                      $23 *= $24
  418. copy_slot_unmasked             $24 = f2
  419. copy_slot_unmasked             $25 = two
  420. mul_float                      $24 *= $25
  421. copy_slot_unmasked             $25 = f3
  422. copy_slot_unmasked             $26 = two
  423. mul_float                      $25 *= $26
  424. copy_slot_unmasked             $26 = f4
  425. copy_slot_unmasked             $27 = two
  426. mul_float                      $26 *= $27
  427. copy_4_slots_unmasked          b = $23..26
  428. store_condition_mask           $45 = CondMask
  429. copy_slot_unmasked             $46 = eq
  430. copy_4_slots_unmasked          $23..26 = a
  431. copy_4_slots_unmasked          $27..30 = b
  432. cmpne_4_floats                 $23..26 = notEqual($23..26, $27..30)
  433. bitwise_or_2_ints              $23..24 |= $25..26
  434. bitwise_or_int                 $23 |= $24
  435. merge_condition_mask           CondMask = $45 & $46
  436. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#443)
  437. copy_4_slots_unmasked          $24..27 = a
  438. copy_4_slots_unmasked          $28..31 = b
  439. cmpeq_4_floats                 $24..27 = equal($24..27, $28..31)
  440. bitwise_and_2_ints             $24..25 &= $26..27
  441. bitwise_and_int                $24 &= $25
  442. copy_slot_masked               $23 = Mask($24)
  443. load_condition_mask            CondMask = $45
  444. copy_slot_masked               [test_diff_vectors].result = Mask($23)
  445. bitwise_not_int                $23 = ~$23
  446. copy_slot_masked               $22 = Mask($23)
  447. load_condition_mask            CondMask = $43
  448. copy_4_constants               $0..3 = colorRed
  449. merge_condition_mask           CondMask = $21 & $22
  450. copy_4_constants               $4..7 = colorGreen
  451. copy_4_slots_masked            $0..3 = Mask($4..7)
  452. load_condition_mask            CondMask = $21
  453. copy_4_slots_masked            [main].result = Mask($0..3)
  454. load_src                       src.rgba = [main].result
