    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $6 = 0
    4. copy_slot_unmasked             kZero = $6
    5. copy_constant                  $6 = 0x41200000 (10.0)
    6. copy_slot_unmasked             kTen = $6
    7. copy_slot_unmasked             $6 = pos(0)
    8. copy_constant                  $7 = colorGreen(1)
    9. max_float                      $6 = max($6, $7)
   10. copy_constant                  $7 = colorGreen(3)
   11. min_float                      $6 = min($6, $7)
   12. copy_constant                  $7 = 0x40A00000 (5.0)
   13. mul_float                      $6 *= $7
   14. copy_slot_unmasked             five = $6
   15. store_condition_mask           $25 = CondMask
   16. store_condition_mask           $45 = CondMask
   17. store_condition_mask           $55 = CondMask
   18. store_condition_mask           $35 = CondMask
   19. store_condition_mask           $81 = CondMask
   20. store_condition_mask           $65 = CondMask
   21. store_condition_mask           $20 = CondMask
   22. store_condition_mask           $75 = CondMask
   23. store_condition_mask           $14 = CondMask
   24. store_condition_mask           $0 = CondMask
   25. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (#59)
   26. store_return_mask              $1 = RetMask
   27. copy_slot_unmasked             $2 = five
   28. copy_slot_unmasked             five = $2
   29. copy_slot_unmasked             $2 = kZero
   30. copy_slot_unmasked             i = $2
   31. store_loop_mask                $2 = LoopMask
   32. jump                           jump +16 (#48)
   33. zero_slot_unmasked             [for-loop continue mask 0] = 0
   34. store_condition_mask           $3 = CondMask
   35. copy_slot_unmasked             $4 = i
   36. copy_slot_unmasked             $5 = five
   37. cmpeq_float                    $4 = equal($4, $5)
   38. merge_condition_mask           CondMask = $3 & $4
   39. copy_slot_unmasked             $5 = i
   40. copy_slot_masked               [return_loop].result = Mask($5)
   41. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   42. load_condition_mask            CondMask = $3
   43. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   44. copy_slot_unmasked             $3 = i
   45. copy_constant                  $4 = 0x3F800000 (1.0)
   46. add_float                      $3 += $4
   47. copy_slot_masked               i = Mask($3)
   48. copy_slot_unmasked             $3 = i
   49. copy_constant                  $4 = 0x41200000 (10.0)
   50. cmplt_float                    $3 = lessThan($3, $4)
   51. merge_loop_mask                LoopMask &= $3
   52. stack_rewind
   53. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (#33)
   54. load_loop_mask                 LoopMask = $2
   55. zero_slot_unmasked             $2 = 0
   56. copy_slot_masked               [return_loop].result = Mask($2)
   57. load_return_mask               RetMask = $1
   58. copy_slot_unmasked             $1 = [return_loop].result
   59. copy_constant                  $2 = 0x40A00000 (5.0)
   60. cmpeq_float                    $1 = equal($1, $2)
   61. zero_slot_unmasked             $15 = 0
   62. merge_condition_mask           CondMask = $0 & $1
   63. branch_if_no_active_lanes      branch_if_no_active_lanes +39 (#102)
   64. copy_slot_unmasked             $16 = five
   65. copy_slot_unmasked             five = $16
   66. zero_slot_unmasked             $16 = 0
   67. copy_slot_unmasked             sum = $16
   68. zero_slot_unmasked             $16 = 0
   69. copy_slot_unmasked             i = $16
   70. store_loop_mask                $16 = LoopMask
   71. jump                           jump +19 (#90)
   72. zero_slot_unmasked             [for-loop continue mask 1] = 0
   73. store_condition_mask           $17 = CondMask
   74. copy_slot_unmasked             $18 = i
   75. copy_slot_unmasked             $19 = five
   76. cmplt_float                    $18 = lessThan($18, $19)
   77. merge_condition_mask           CondMask = $17 & $18
   78. copy_constant                  $19 = 0xFFFFFFFF
   79. copy_slot_masked               [for-loop continue mask 1] = Mask($19)
   80. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   81. load_condition_mask            CondMask = $17
   82. copy_2_slots_unmasked          $17..18 = sum(0..1)
   83. add_float                      $17 += $18
   84. copy_slot_masked               sum = Mask($17)
   85. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   86. copy_slot_unmasked             $17 = i
   87. copy_constant                  $18 = 0x3F800000 (1.0)
   88. add_float                      $17 += $18
   89. copy_slot_masked               i = Mask($17)
   90. copy_slot_unmasked             $17 = i
   91. copy_slot_unmasked             $18 = kTen
   92. cmplt_float                    $17 = lessThan($17, $18)
   93. merge_loop_mask                LoopMask &= $17
   94. stack_rewind
   95. branch_if_any_active_lanes     branch_if_any_active_lanes -23 (#72)
   96. load_loop_mask                 LoopMask = $16
   97. copy_slot_unmasked             $16 = sum
   98. copy_slot_masked               [continue_loop].result = Mask($16)
   99. copy_constant                  $17 = 0x420C0000 (35.0)
  100. cmpeq_float                    $16 = equal($16, $17)
  101. copy_slot_masked               $15 = Mask($16)
  102. load_condition_mask            CondMask = $0
  103. zero_slot_unmasked             $76 = 0
  104. merge_condition_mask           CondMask = $14 & $15
  105. branch_if_no_active_lanes      branch_if_no_active_lanes +40 (#145)
  106. copy_slot_unmasked             $77 = five
  107. copy_slot_unmasked             five = $77
  108. zero_slot_unmasked             $77 = 0
  109. copy_slot_unmasked             sum = $77
  110. copy_constant                  $77 = 0x3F800000 (1.0)
  111. copy_slot_unmasked             kOne = $77
  112. zero_slot_unmasked             $77 = 0
  113. copy_slot_unmasked             i = $77
  114. store_loop_mask                $77 = LoopMask
  115. jump                           jump +18 (#133)
  116. zero_slot_unmasked             [for-loop continue mask 2] = 0
  117. store_condition_mask           $78 = CondMask
  118. copy_slot_unmasked             $79 = five
  119. copy_slot_unmasked             $80 = i
  120. cmplt_float                    $79 = lessThan($79, $80)
  121. merge_condition_mask           CondMask = $78 & $79
  122. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  123. load_condition_mask            CondMask = $78
  124. copy_slot_unmasked             $78 = sum
  125. copy_slot_unmasked             $79 = i
  126. add_float                      $78 += $79
  127. copy_slot_masked               sum = Mask($78)
  128. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
  129. copy_slot_unmasked             $78 = i
  130. copy_slot_unmasked             $79 = kOne
  131. add_float                      $78 += $79
  132. copy_slot_masked               i = Mask($78)
  133. copy_slot_unmasked             $78 = i
  134. copy_constant                  $79 = 0x41200000 (10.0)
  135. cmplt_float                    $78 = lessThan($78, $79)
  136. merge_loop_mask                LoopMask &= $78
  137. stack_rewind
  138. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (#116)
  139. load_loop_mask                 LoopMask = $77
  140. copy_slot_unmasked             $77 = sum
  141. copy_slot_masked               [break_loop].result = Mask($77)
  142. copy_constant                  $78 = 0x41700000 (15.0)
  143. cmpeq_float                    $77 = equal($77, $78)
  144. copy_slot_masked               $76 = Mask($77)
  145. load_condition_mask            CondMask = $14
  146. zero_slot_unmasked             $21 = 0
  147. merge_condition_mask           CondMask = $75 & $76
  148. branch_if_no_active_lanes      branch_if_no_active_lanes +31 (#179)
  149. zero_slot_unmasked             $22 = 0
  150. copy_slot_unmasked             sum = $22
  151. copy_constant                  $22 = 0x3DFBE76D (0.123)
  152. copy_slot_unmasked             i = $22
  153. store_loop_mask                $22 = LoopMask
  154. jump                           jump +10 (#164)
  155. zero_slot_unmasked             [for-loop continue mask 3] = 0
  156. copy_2_slots_unmasked          $23..24 = sum(0..1)
  157. add_float                      $23 += $24
  158. copy_slot_masked               sum = Mask($23)
  159. reenable_loop_mask             LoopMask |= [for-loop continue mask 3]
  160. copy_slot_unmasked             $23 = i
  161. copy_constant                  $24 = 0x3DE353F8 (0.111)
  162. add_float                      $23 += $24
  163. copy_slot_masked               i = Mask($23)
  164. copy_slot_unmasked             $23 = i
  165. copy_constant                  $24 = 0x3F19999A (0.6)
  166. cmplt_float                    $23 = lessThan($23, $24)
  167. merge_loop_mask                LoopMask &= $23
  168. stack_rewind
  169. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (#155)
  170. load_loop_mask                 LoopMask = $22
  171. copy_slot_unmasked             $22 = sum
  172. copy_constant                  $23 = 0x3FDCCCCD (1.725)
  173. sub_float                      $22 -= $23
  174. copy_slot_masked               [float_loop].result = Mask($22)
  175. abs_float                      $22 = abs($22)
  176. copy_constant                  $23 = 0x3CCCCCCD (0.025)
  177. cmplt_float                    $22 = lessThan($22, $23)
  178. copy_slot_masked               $21 = Mask($22)
  179. load_condition_mask            CondMask = $75
  180. zero_slot_unmasked             $66 = 0
  181. merge_condition_mask           CondMask = $20 & $21
  182. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#215)
  183. copy_constant                  $67 = 0x41100000 (9.0)
  184. swizzle_4                      $67..70 = ($67..70).xxxx
  185. copy_4_slots_unmasked          result = $67..70
  186. copy_constant                  $67 = 0x3F800000 (1.0)
  187. copy_slot_unmasked             i = $67
  188. store_loop_mask                $67 = LoopMask
  189. jump                           jump +9 (#198)
  190. zero_slot_unmasked             [for-loop continue mask 4] = 0
  191. copy_4_slots_unmasked          $68..71 = result
  192. copy_4_slots_masked            result = Mask($68..71)
  193. reenable_loop_mask             LoopMask |= [for-loop continue mask 4]
  194. copy_slot_unmasked             $68 = i
  195. copy_constant                  $69 = 0x3F800000 (1.0)
  196. add_float                      $68 += $69
  197. copy_slot_masked               i = Mask($68)
  198. copy_slot_unmasked             $68 = i
  199. copy_constant                  $69 = 0x40400000 (3.0)
  200. cmple_float                    $68 = lessThanEqual($68, $69)
  201. merge_loop_mask                LoopMask &= $68
  202. stack_rewind
  203. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#190)
  204. load_loop_mask                 LoopMask = $67
  205. copy_4_slots_unmasked          $67..70 = result
  206. copy_constant                  $71 = 0x41100000 (9.0)
  207. copy_constant                  $72 = 0x3F800000 (1.0)
  208. copy_constant                  $73 = 0x40000000 (2.0)
  209. copy_constant                  $74 = 0x40400000 (3.0)
  210. cmpeq_4_floats                 $67..70 = equal($67..70, $71..74)
  211. bitwise_and_2_ints             $67..68 &= $69..70
  212. bitwise_and_int                $67 &= $68
  213. copy_slot_masked               [loop_operator_le].result = Mask($67)
  214. copy_slot_masked               $66 = Mask($67)
  215. load_condition_mask            CondMask = $20
  216. zero_slot_unmasked             $82 = 0
  217. merge_condition_mask           CondMask = $65 & $66
  218. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#251)
  219. copy_constant                  $83 = 0x41100000 (9.0)
  220. swizzle_4                      $83..86 = ($83..86).xxxx
  221. copy_4_slots_unmasked          result = $83..86
  222. copy_constant                  $83 = 0x3F800000 (1.0)
  223. copy_slot_unmasked             i = $83
  224. store_loop_mask                $83 = LoopMask
  225. jump                           jump +9 (#234)
  226. zero_slot_unmasked             [for-loop continue mask 5] = 0
  227. copy_4_slots_unmasked          $84..87 = result
  228. copy_4_slots_masked            result = Mask($84..87)
  229. reenable_loop_mask             LoopMask |= [for-loop continue mask 5]
  230. copy_slot_unmasked             $84 = i
  231. copy_constant                  $85 = 0x3F800000 (1.0)
  232. add_float                      $84 += $85
  233. copy_slot_masked               i = Mask($84)
  234. copy_slot_unmasked             $84 = i
  235. copy_constant                  $85 = 0x40800000 (4.0)
  236. cmplt_float                    $84 = lessThan($84, $85)
  237. merge_loop_mask                LoopMask &= $84
  238. stack_rewind
  239. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#226)
  240. load_loop_mask                 LoopMask = $83
  241. copy_4_slots_unmasked          $83..86 = result
  242. copy_constant                  $87 = 0x41100000 (9.0)
  243. copy_constant                  $88 = 0x3F800000 (1.0)
  244. copy_constant                  $89 = 0x40000000 (2.0)
  245. copy_constant                  $90 = 0x40400000 (3.0)
  246. cmpeq_4_floats                 $83..86 = equal($83..86, $87..90)
  247. bitwise_and_2_ints             $83..84 &= $85..86
  248. bitwise_and_int                $83 &= $84
  249. copy_slot_masked               [loop_operator_lt].result = Mask($83)
  250. copy_slot_masked               $82 = Mask($83)
  251. load_condition_mask            CondMask = $65
  252. zero_slot_unmasked             $36 = 0
  253. merge_condition_mask           CondMask = $81 & $82
  254. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#287)
  255. copy_constant                  $37 = 0x41100000 (9.0)
  256. swizzle_4                      $37..40 = ($37..40).xxxx
  257. copy_4_slots_unmasked          result = $37..40
  258. copy_constant                  $37 = 0x40400000 (3.0)
  259. copy_slot_unmasked             i = $37
  260. store_loop_mask                $37 = LoopMask
  261. jump                           jump +9 (#270)
  262. zero_slot_unmasked             [for-loop continue mask 6] = 0
  263. copy_4_slots_unmasked          $38..41 = result
  264. copy_4_slots_masked            result = Mask($38..41)
  265. reenable_loop_mask             LoopMask |= [for-loop continue mask 6]
  266. copy_slot_unmasked             $38 = i
  267. copy_constant                  $39 = 0x3F800000 (1.0)
  268. sub_float                      $38 -= $39
  269. copy_slot_masked               i = Mask($38)
  270. copy_constant                  $38 = 0x3F800000 (1.0)
  271. copy_slot_unmasked             $39 = i
  272. cmple_float                    $38 = lessThanEqual($38, $39)
  273. merge_loop_mask                LoopMask &= $38
  274. stack_rewind
  275. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#262)
  276. load_loop_mask                 LoopMask = $37
  277. copy_4_slots_unmasked          $37..40 = result
  278. copy_constant                  $41 = 0x41100000 (9.0)
  279. copy_constant                  $42 = 0x40400000 (3.0)
  280. copy_constant                  $43 = 0x40000000 (2.0)
  281. copy_constant                  $44 = 0x3F800000 (1.0)
  282. cmpeq_4_floats                 $37..40 = equal($37..40, $41..44)
  283. bitwise_and_2_ints             $37..38 &= $39..40
  284. bitwise_and_int                $37 &= $38
  285. copy_slot_masked               [loop_operator_ge].result = Mask($37)
  286. copy_slot_masked               $36 = Mask($37)
  287. load_condition_mask            CondMask = $81
  288. zero_slot_unmasked             $56 = 0
  289. merge_condition_mask           CondMask = $35 & $36
  290. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#323)
  291. copy_constant                  $57 = 0x41100000 (9.0)
  292. swizzle_4                      $57..60 = ($57..60).xxxx
  293. copy_4_slots_unmasked          result = $57..60
  294. copy_constant                  $57 = 0x40400000 (3.0)
  295. copy_slot_unmasked             i = $57
  296. store_loop_mask                $57 = LoopMask
  297. jump                           jump +9 (#306)
  298. zero_slot_unmasked             [for-loop continue mask 7] = 0
  299. copy_4_slots_unmasked          $58..61 = result
  300. copy_4_slots_masked            result = Mask($58..61)
  301. reenable_loop_mask             LoopMask |= [for-loop continue mask 7]
  302. copy_slot_unmasked             $58 = i
  303. copy_constant                  $59 = 0x3F800000 (1.0)
  304. sub_float                      $58 -= $59
  305. copy_slot_masked               i = Mask($58)
  306. zero_slot_unmasked             $58 = 0
  307. copy_slot_unmasked             $59 = i
  308. cmplt_float                    $58 = lessThan($58, $59)
  309. merge_loop_mask                LoopMask &= $58
  310. stack_rewind
  311. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#298)
  312. load_loop_mask                 LoopMask = $57
  313. copy_4_slots_unmasked          $57..60 = result
  314. copy_constant                  $61 = 0x41100000 (9.0)
  315. copy_constant                  $62 = 0x40400000 (3.0)
  316. copy_constant                  $63 = 0x40000000 (2.0)
  317. copy_constant                  $64 = 0x3F800000 (1.0)
  318. cmpeq_4_floats                 $57..60 = equal($57..60, $61..64)
  319. bitwise_and_2_ints             $57..58 &= $59..60
  320. bitwise_and_int                $57 &= $58
  321. copy_slot_masked               [loop_operator_gt].result = Mask($57)
  322. copy_slot_masked               $56 = Mask($57)
  323. load_condition_mask            CondMask = $35
  324. zero_slot_unmasked             $46 = 0
  325. merge_condition_mask           CondMask = $55 & $56
  326. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#359)
  327. copy_constant                  $47 = 0x41100000 (9.0)
  328. swizzle_4                      $47..50 = ($47..50).xxxx
  329. copy_4_slots_unmasked          result = $47..50
  330. copy_constant                  $47 = 0x3F800000 (1.0)
  331. copy_slot_unmasked             i = $47
  332. store_loop_mask                $47 = LoopMask
  333. jump                           jump +9 (#342)
  334. zero_slot_unmasked             [for-loop continue mask 8] = 0
  335. copy_4_slots_unmasked          $48..51 = result
  336. copy_4_slots_masked            result = Mask($48..51)
  337. reenable_loop_mask             LoopMask |= [for-loop continue mask 8]
  338. copy_slot_unmasked             $48 = i
  339. copy_constant                  $49 = 0x3F800000 (1.0)
  340. add_float                      $48 += $49
  341. copy_slot_masked               i = Mask($48)
  342. copy_slot_unmasked             $48 = i
  343. copy_constant                  $49 = 0x3F800000 (1.0)
  344. cmpeq_float                    $48 = equal($48, $49)
  345. merge_loop_mask                LoopMask &= $48
  346. stack_rewind
  347. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#334)
  348. load_loop_mask                 LoopMask = $47
  349. copy_4_slots_unmasked          $47..50 = result
  350. copy_constant                  $51 = 0x41100000 (9.0)
  351. copy_constant                  $52 = 0x41100000 (9.0)
  352. copy_constant                  $53 = 0x41100000 (9.0)
  353. copy_constant                  $54 = 0x3F800000 (1.0)
  354. cmpeq_4_floats                 $47..50 = equal($47..50, $51..54)
  355. bitwise_and_2_ints             $47..48 &= $49..50
  356. bitwise_and_int                $47 &= $48
  357. copy_slot_masked               [loop_operator_eq].result = Mask($47)
  358. copy_slot_masked               $46 = Mask($47)
  359. load_condition_mask            CondMask = $55
  360. zero_slot_unmasked             $26 = 0
  361. merge_condition_mask           CondMask = $45 & $46
  362. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#395)
  363. copy_constant                  $27 = 0x41100000 (9.0)
  364. swizzle_4                      $27..30 = ($27..30).xxxx
  365. copy_4_slots_unmasked          result = $27..30
  366. copy_constant                  $27 = 0x3F800000 (1.0)
  367. copy_slot_unmasked             i = $27
  368. store_loop_mask                $27 = LoopMask
  369. jump                           jump +9 (#378)
  370. zero_slot_unmasked             [for-loop continue mask 9] = 0
  371. copy_4_slots_unmasked          $28..31 = result
  372. copy_4_slots_masked            result = Mask($28..31)
  373. reenable_loop_mask             LoopMask |= [for-loop continue mask 9]
  374. copy_slot_unmasked             $28 = i
  375. copy_constant                  $29 = 0x3F800000 (1.0)
  376. add_float                      $28 += $29
  377. copy_slot_masked               i = Mask($28)
  378. copy_slot_unmasked             $28 = i
  379. copy_constant                  $29 = 0x40800000 (4.0)
  380. cmpne_float                    $28 = notEqual($28, $29)
  381. merge_loop_mask                LoopMask &= $28
  382. stack_rewind
  383. branch_if_any_active_lanes     branch_if_any_active_lanes -13 (#370)
  384. load_loop_mask                 LoopMask = $27
  385. copy_4_slots_unmasked          $27..30 = result
  386. copy_constant                  $31 = 0x41100000 (9.0)
  387. copy_constant                  $32 = 0x3F800000 (1.0)
  388. copy_constant                  $33 = 0x40000000 (2.0)
  389. copy_constant                  $34 = 0x40400000 (3.0)
  390. cmpeq_4_floats                 $27..30 = equal($27..30, $31..34)
  391. bitwise_and_2_ints             $27..28 &= $29..30
  392. bitwise_and_int                $27 &= $28
  393. copy_slot_masked               [loop_operator_ne].result = Mask($27)
  394. copy_slot_masked               $26 = Mask($27)
  395. load_condition_mask            CondMask = $45
  396. copy_4_constants               $6..9 = colorRed
  397. merge_condition_mask           CondMask = $25 & $26
  398. copy_4_constants               $10..13 = colorGreen
  399. copy_4_slots_masked            $6..9 = Mask($10..13)
  400. load_condition_mask            CondMask = $25
  401. copy_4_slots_masked            [main].result = Mask($6..9)
  402. load_src                       src.rgba = [main].result
